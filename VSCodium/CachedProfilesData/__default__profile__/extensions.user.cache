{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/shiri/.vscode-oss/extensions/extensions.json","path":"/home/shiri/.vscode-oss/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1760862568754,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"validate":true,"productVersion":"1.104.36664","productDate":"2025-10-04T16:58:18.791Z","productCommit":"3af140d2498acc8743822d23d4171fe1eac449ec","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"theqtcompany.qt-qml","uuid":"daf7e7bd-fe35-4124-ac63-bd9a91d0c62c"},"manifest":{"name":"qt-qml","displayName":"Qt Qml","description":"Qt Qml Support","version":"1.8.0","homepage":"https://www.qt.io/","icon":"res/icons/qt.png","publisher":"theqtcompany","repository":{"type":"git","url":"https://github.com/qt-labs/vscodeext"},"bugs":{"url":"https://bugreports.qt.io/projects/VSCODEEXT"},"engines":{"vscode":"^1.94.0"},"categories":["Programming Languages","Formatters","Snippets"],"keywords":["Qt","Qml"],"qna":"marketplace","pricing":"Free","activationEvents":["workspaceContains:*.qml","workspaceContains:*.qmldir"],"main":"./out/extension.js","l10n":"./l10n","contributes":{"commands":[{"command":"qt-qml.restartQmlls","title":"Restart QML language server","category":"Qt"},{"command":"qt-qml.checkQmllsUpdate","title":"Check for QML language server update","category":"Qt"},{"command":"qt-qml.downloadQmlls","title":"Download the most recent QML language server","category":"Qt"}],"languages":[{"id":"qml","configuration":"./res/lang/qml/language-configuration.json","extensions":[".qml",".qmlproject"],"aliases":["QML","Qml","qml"],"icon":{"light":"res/icons/qml-light.svg","dark":"res/icons/qml-dark.svg"}},{"id":"qmldir","configuration":"./res/lang/qmldir/language-configuration.json","filenames":["qmldir"],"aliases":["QMLDir","qmldir"]}],"grammars":[{"language":"qml","scopeName":"source.qml","path":"./res/lang/qml/qml.qmlproject.tmLanguage.json"},{"language":"qmldir","scopeName":"source.qmldir","path":"./res/lang/qmldir/qmldir.tmLanguage.json"}],"configuration":{"type":"object","title":"Qt Qml Configuration","properties":{"qt-qml.qmlls.enabled":{"type":"boolean","default":true,"description":"Run QML Language Server when activating an extension","scope":"machine-overridable"},"qt-qml.qmlls.verboseOutput":{"type":"boolean","default":false,"description":"Run QML Language Server with --verbose option","scope":"machine-overridable"},"qt-qml.qmlls.traceLsp":{"type":"string","default":"off","enum":["off","messages","compact","verbose"],"enumDescriptions":["Off","Show messages only","Show messages with parameters as compact JSON","Show messages with parameters as multiline JSON"],"description":"Handle LSP trace","scope":"machine-overridable"},"qt-qml.qmlls.customExePath":{"type":"string","default":"","description":"Specify the custom QML Language Server executable path","scope":"machine-overridable"},"qt-qml.qmlls.customArgs":{"type":"array","items":{"type":"string"},"default":[],"description":"Use custom QML Language Server arguments instead of the default ones","scope":"machine-overridable"},"qt-qml.qmlls.customDocsPath":{"type":"string","default":"","description":"Specify the documentation path for QML Language Server","scope":"machine-overridable"},"qt-qml.qmlls.additionalImportPaths":{"type":"array","items":{"type":"string"},"default":[],"description":"Look for QML modules in the specified directories. Each entry will be added via the \"-I\" command argument when starting QML Language Server","scope":"machine-overridable"},"qt-qml.qmlls.useQmlImportPathEnvVar":{"type":"boolean","default":false,"description":"Use the QML_IMPORT_PATH environment variable to look for QML Modules. When set to true, the \"-E\" command argument will be added when starting QML Language Server","scope":"machine-overridable"},"qt-qml.qmlls.useNoCMakeCalls":{"type":"boolean","default":false,"description":"Use --no-cmake-calls option when starting QML Language Server","scope":"machine-overridable"},"qt-qml.doNotAskForQmllsDownload":{"type":"boolean","default":false,"description":"Do not ask for downloading QML Language Server","scope":"machine"}}},"breakpoints":[{"language":"qml"}],"debuggers":[{"type":"qml","label":"QML debugger","runtime":"node","configurationAttributes":{"attach":{"required":["host","port"],"properties":{"host":{"type":"string","description":"Hostname (or IP address) of the target program's debug service","default":"localhost"},"port":{"type":["number","string"],"description":"Port of the target program's debug service"},"buildDirs":{"type":"array","description":"List of build directories to include in the debugger. This variable is useful when the build directory is not in the workspace.","items":{"type":"string"}}}},"launch":{"required":["program"],"properties":{"program":{"type":"string","description":"Path to the program to be debugged"},"debuggerArgs":{"type":"string","description":"Command line arguments passed to the program"},"args":{"type":"array","description":"Additional command line arguments passed to the program","items":{"type":"string"}},"buildDirs":{"type":"array","description":"List of build directories to include in the debugger. This variable is useful when the build directory is not in the workspace.","items":{"type":"string"}}}}},"initialConfigurations":[{"type":"qml","request":"attach","name":"Attach to QML debugger","host":"localhost","port":"^\"Custom port or \\${command:qt-qml.debugPort} for compound usage\""}],"configurationSnippets":[{"label":"Qt: QML: Launch","description":"Launch a QML application with the QML debugger","body":{"name":"Qt: QML: Launch","type":"qml","request":"launch","program":"^\"\\${command:cmake.launchTargetPath}\""}},{"label":"Qt: QML: Attach by port","description":"Attach to a running QML application with the QML debugger","body":{"name":"Qt: QML: Attach by port","type":"qml","request":"attach","host":"localhost","port":"^\"Custom port or \\${command:qt-qml.debugPort} for compound usage\""}},{"label":"Qt: Debug with cppdbg and QML debugger","description":"Launch a QML application with C++ debugger and attach with QML debugger","body":{"name":"Qt: Debug with cppdbg and QML debugger","type":"cppdbg","request":"launch","program":"^\"\\${command:cmake.launchTargetPath}\"","stopAtEntry":false,"cwd":"^\"\\${workspaceFolder}\"","visualizerFile":"^\"\\${command:qt-cpp.natvis}\"","showDisplayString":true,"args":["^\"-qmljsdebugger=host:localhost,port:\\${command:qt-qml.debugPort},block,services:DebugMessages,QmlDebugger,V8Debugger\""],"linux":{"MIMode":"gdb","miDebuggerPath":"/usr/bin/gdb"},"osx":{"MIMode":"lldb"},"windows":{"environment":[{"name":"PATH","value":"^\"\\${env:PATH};\\${command:qt-cpp.qtDir}\""},{"name":"QT_QPA_PLATFORM_PLUGIN_PATH","value":"^\"\\${command:qt-cpp.QT_QPA_PLATFORM_PLUGIN_PATH}\""},{"name":"QML_IMPORT_PATH","value":"^\"\\${command:qt-cpp.QML_IMPORT_PATH}\""}],"MIMode":"gdb","miDebuggerPath":"^\"\\${command:qt-cpp.minGWgdb}\""}}},{"label":"Qt: Debug with cppdbg and QML debugger (Windows)","description":"Launch a QML application with Visual Studio Debugger and attach with QML debugger","body":{"name":"Qt: Debug with cppdbg and QML debugger (Windows)","type":"cppvsdbg","request":"launch","program":"^\"\\${command:cmake.launchTargetPath}\"","stopAtEntry":false,"cwd":"^\"\\${workspaceFolder}\"","visualizerFile":"^\"\\${command:qt-cpp.natvis}\"","args":["^\"-qmljsdebugger=host:localhost,port:\\${command:qt-qml.debugPort},block,services:DebugMessages,QmlDebugger,V8Debugger\""],"windows":{"environment":[{"name":"PATH","value":"^\"\\${env:PATH};\\${command:qt-cpp.qtDir}\""},{"name":"QT_QPA_PLATFORM_PLUGIN_PATH","value":"^\"\\${command:qt-cpp.QT_QPA_PLATFORM_PLUGIN_PATH}\""},{"name":"QML_IMPORT_PATH","value":"^\"\\${command:qt-cpp.QML_IMPORT_PATH}\""}]}}}]}]},"taskDefinitions":[{"type":"Qt"}],"extensionDependencies":["theqtcompany.qt-core"],"scripts":{"vscode:prepublish":"cross-env NODE_ENV=production node ./esbuild.mjs && git rev-parse HEAD > commit","compile":"node ./esbuild.mjs","watch":"node ./esbuild.mjs --watch","pretest":"npm run compile && npm run lint","lint":"npm run prettierWrite && eslint . --fix --cache","prettierWrite":"npm run prettierBase -- --write \"**/*.{js,ts,json,mjs,cjs}\" --log-level silent","prettierCheck":"npm run prettierBase -- --check \"**/*.{js,ts,json,mjs,cjs}\"","prettierBase":"prettier --config \"../common/.prettierrc\" --ignore-path \"../common/.prettierignore\" --cache --cache-strategy metadata","package":"vsce package --out out"},"devDependencies":{"@eslint/eslintrc":"^3.3.0","@eslint/js":"^9.21.0","@types/license-checker":"^25.0.6","@types/node":"^20.17.0","@types/vscode":"^1.94.0","@types/yauzl":"^2.10.3","@typescript-eslint/eslint-plugin":"^6.21.0","@typescript-eslint/parser":"^6.21.0","@vscode/l10n-dev":"^0.0.30","@vscode/test-electron":"^2.4.1","@vscode/vsce":"^2.32.0","chai":"^4.5.0","commander":"^11.1.0","cross-env":"^7.0.3","esbuild":"^0.25.0","eslint":"^8.57.1","license-checker":"^25.0.1","mocha":"^10.7.3","prettier":"^3.3.3","ts-node":"^10.9.2","typescript":"^5.6.3"},"dependencies":{"@vscode/debugadapter":"^1.68.0","@vscode/debugprotocol":"^1.68.0","@vscode/l10n":"^0.0.16","async-mutex":"^0.5.0","fast-xml-parser":"^5.0.8","get-port":"^7.1.0","module-alias":"^2.2.3","promise-socket":"^8.0.0","qt-lib":"file:../qt-lib","typescript":"^5.6.3","untildify":"^5.0.0","vscode-languageclient":"^9.0.1","yauzl":"^3.1.3"}},"location":{"$mid":1,"path":"/home/shiri/.vscode-oss/extensions/theqtcompany.qt-qml-1.8.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"Qt Group","metadata":{"installedTimestamp":1760207258782,"pinned":false,"source":"gallery","id":"daf7e7bd-fe35-4124-ac63-bd9a91d0c62c","publisherId":"d1f6f684-75e9-4507-98db-fb3f1c2f8718","publisherDisplayName":"Qt Group","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":1183778},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"theqtcompany.qt-core","uuid":"f5bc3648-b606-4bc2-a662-cfe2f0bda54d"},"manifest":{"name":"qt-core","displayName":"Qt Core","description":"Qt Core","version":"1.8.0","homepage":"https://www.qt.io/","icon":"res/icons/qt.png","publisher":"theqtcompany","repository":{"type":"git","url":"https://github.com/qt-labs/vscodeext"},"bugs":{"url":"https://bugreports.qt.io/projects/VSCODEEXT"},"engines":{"vscode":"^1.94.0"},"categories":["Programming Languages"],"keywords":["Qt","C++","CMake","Qml","Qrc","Qss","Qdoc"],"qna":"marketplace","pricing":"Free","main":"./out/extension.js","contributes":{"commands":[{"command":"qt-core.documentationHomepage","title":"Documentation: Open Homepage","category":"Qt"},{"command":"qt-core.documentationSearchManually","title":"Documentation: Search","category":"Qt"},{"command":"qt-core.documentationSearchForCurrentWord","title":"Documentation: Search for the current word","category":"Qt"},{"command":"qt-core.openSettings","title":"Open Qt Settings","category":"Qt"},{"command":"qt-core.setRecommendedSettings","title":"Set the recommended Qt Extension settings","category":"Qt"},{"command":"qt-core.registerQt","title":"Register Qt Installation","category":"Qt"},{"command":"qt-core.reset","title":"Reset Qt Tools Extension State (For troubleshooting)","category":"Qt"},{"command":"qt-core.registerQtByQtpaths","title":"Register Qt (by qtpaths or qmake)","category":"Qt"},{"command":"qt-core.createNewItem","title":"Create a new project or file","category":"Qt"}],"languages":[{"id":"qrc","configuration":"./res/lang/qrc/language-configuration.json","extensions":[".qrc",".qrc.cmakein"],"aliases":["Qrc"],"icon":{"light":"res/icons/qrc-light.svg","dark":"res/icons/qrc-dark.svg"}},{"id":"qss","configuration":"./res/lang/qss/language-configuration.json","extensions":[".qss"],"aliases":["QSS","Qss"],"icon":{"light":"res/icons/qss-light.svg","dark":"res/icons/qss-dark.svg"}},{"id":"qdoc","configuration":"./res/lang/qdoc/language-configuration.json","extensions":[".qdoc",".qdocconf",".qdocinc"],"aliases":["Qdoc","QDoc","qdoc"],"icon":{"light":"res/icons/qdoc-light.svg","dark":"res/icons/qdoc-dark.svg"}}],"grammars":[{"language":"qdoc","scopeName":"source.qdoc","path":"./res/lang/qdoc/qdoc.tmLanguage.json"},{"language":"qrc","scopeName":"source.qrc","path":"./res/lang/qrc/qrc.tmLanguage.json"},{"language":"qss","scopeName":"source.qss","path":"./res/lang/qss/qss.tmLanguage.json"}],"configuration":{"type":"object","title":"Qt Core Configuration","properties":{"qt-core.qtInstallationRoot":{"type":"string","default":"","description":"Specify the Qt Installation Root","scope":"machine-overridable"},"qt-core.doNotAskForDefaultQtInstallationRoot":{"type":"boolean","default":false,"description":"Do not ask for default Qt Installation Root","scope":"machine"},"qt-core.doNotAskForVCPKG":{"type":"boolean","default":false,"description":"Do not ask for vcpkg","scope":"machine"},"qt-core.additionalQtPaths":{"type":"array","items":{"type":["string","object"]},"default":[],"description":"Specify additional Qt installations as paths to the qtpaths or qmake executable","scope":"machine-overridable"},"qt-core.openOnlineDocumentationInExternalBrowser":{"type":"boolean","default":false,"description":"Open online documentation in external browser","scope":"machine-overridable"},"qt-core.defaultProjectDirectory":{"type":"string","default":"","description":"Specify the default project directory when creating new projects","scope":"machine-overridable"}}}},"scripts":{"vscode:prepublish":"cross-env NODE_ENV=production npm run compile && git rev-parse HEAD > commit","compile":"npm run build:webview && node ./esbuild.mjs","watch":"node ./esbuild.mjs --watch","pretest":"npm run compile && npm run lint","lint":"npm run prettierWrite && eslint . --fix --cache","prettierWrite":"npm run prettierBase -- --write \"**/*.{js,ts,json,mjs,cjs}\" --log-level silent","prettierCheck":"npm run prettierBase -- --check \"**/*.{js,ts,json,mjs,cjs}\"","prettierBase":"prettier --config \"../common/.prettierrc\" --ignore-path \"../common/.prettierignore\" --cache --cache-strategy metadata","package":"vsce package --out out","ci:all":"npm run ci:webview && npm ci","install:all":"npm run install:webview && npm install","ci:webview":"cd webview-ui && npm ci","build:webview":"cd webview-ui && npm run build","install:webview":"cd webview-ui && npm install"},"devDependencies":{"@eslint/eslintrc":"^3.3.0","@eslint/js":"^9.21.0","@types/command-exists":"^1.2.3","@types/lodash":"^4.17.12","@types/node":"^20.17.0","@types/vscode":"^1.94.0","@types/which":"^3.0.4","@typescript-eslint/eslint-plugin":"^6.21.0","@typescript-eslint/parser":"^6.21.0","@vscode/vsce":"^2.32.0","cross-env":"^7.0.3","esbuild":"^0.25.0","eslint":"^8.57.1","prettier":"^3.3.3","ts-node":"^10.9.2","typescript":"^5.6.3"},"dependencies":{"axios":"^1.9.0","command-exists":"^1.2.9","dotenv":"^16.5.0","lodash":"^4.17.21","module-alias":"^2.2.3","qt-lib":"file:../qt-lib","typescript":"^5.6.3","untildify":"^5.0.0","which":"^5.0.0"}},"location":{"$mid":1,"path":"/home/shiri/.vscode-oss/extensions/theqtcompany.qt-core-1.8.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"Qt Group","metadata":{"installedTimestamp":1760207258782,"pinned":false,"source":"gallery","id":"f5bc3648-b606-4bc2-a662-cfe2f0bda54d","publisherId":"d1f6f684-75e9-4507-98db-fb3f1c2f8718","publisherDisplayName":"Qt Group","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":57412885},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"rust-lang.rust-analyzer","uuid":"06574cb4-e5dc-4631-8174-a543a4533621"},"manifest":{"name":"rust-analyzer","displayName":"rust-analyzer","description":"Rust language support for Visual Studio Code","private":true,"icon":"icon.png","version":"0.3.2593","releaseTag":"2025-08-25","publisher":"rust-lang","type":"commonjs","repository":{"url":"https://github.com/rust-lang/rust-analyzer.git","type":"git"},"homepage":"https://rust-analyzer.github.io/","license":"MIT OR Apache-2.0","keywords":["rust"],"categories":["Formatters","Programming Languages"],"capabilities":{"untrustedWorkspaces":{"supported":false,"description":"rust-analyzer invokes binaries set up by its configuration as well as the Rust toolchain's binaries. A malicious actor could exploit this to run arbitrary code on your machine."}},"engines":{"vscode":"^1.93.0"},"scripts":{"vscode:prepublish":"npm run build-base -- --minify","package":"vsce package -o rust-analyzer.vsix","build-base":"esbuild ./src/main.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node --target=node20","build":"npm run build-base -- --sourcemap","watch":"npm run build-base -- --sourcemap --watch","format":"node --experimental-strip-types node_modules/prettier/bin/prettier.cjs . --write","format:check":"node --experimental-strip-types node_modules/prettier/bin/prettier.cjs . --check","lint":"eslint .","lint:fix":"npm run lint -- --fix","typecheck":"tsc","pretest":"npm run typecheck && npm run build","test":"node ./out/tests/runTests.js"},"dependencies":{"@hpcc-js/wasm":"^2.22.4","anser":"^2.3.2","d3":"^7.9.0","d3-graphviz":"^5.6.0","jiti":"^2.4.2","vscode-languageclient":"^9.0.1"},"devDependencies":{"@eslint/js":"^9.21.0","@stylistic/eslint-plugin":"^4.1.0","@stylistic/eslint-plugin-js":"^4.1.0","@tsconfig/strictest":"^2.0.5","@types/node":"~22.13.4","@types/vscode":"~1.93.0","@typescript-eslint/eslint-plugin":"^8.25.0","@typescript-eslint/parser":"^8.25.0","@vscode/test-electron":"^2.4.1","@vscode/vsce":"^3.2.2","esbuild":"^0.25.0","eslint":"^9.21.0","eslint-config-prettier":"^10.0.2","eslint-define-config":"^2.1.0","ovsx":"0.10.1","prettier":"^3.5.2","tslib":"^2.8.1","typescript":"^5.7.3","typescript-eslint":"^8.25.0"},"activationEvents":["workspaceContains:Cargo.toml","workspaceContains:*/Cargo.toml","workspaceContains:rust-project.json","workspaceContains:*/rust-project.json","workspaceContains:.rust-project.json","workspaceContains:*/.rust-project.json"],"main":"./out/main","contributes":{"taskDefinitions":[{"type":"cargo","required":["command"],"properties":{"label":{"type":"string"},"command":{"type":"string"},"args":{"type":"array","items":{"type":"string"}},"env":{"type":"object","patternProperties":{".+":{"type":"string"}}}}}],"commands":[{"command":"rust-analyzer.viewHir","title":"View Hir","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.viewMir","title":"View Mir","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.interpretFunction","title":"Interpret","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.viewFileText","title":"View File Text (as seen by the server)","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.viewItemTree","title":"Debug ItemTree","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.memoryUsage","title":"Memory Usage (Clears Database)","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.viewCrateGraph","title":"View Crate Graph","category":"rust-analyzer"},{"command":"rust-analyzer.viewFullCrateGraph","title":"View Crate Graph (Full)","category":"rust-analyzer"},{"command":"rust-analyzer.expandMacro","title":"Expand macro recursively at caret","category":"rust-analyzer"},{"command":"rust-analyzer.matchingBrace","title":"Find matching brace","category":"rust-analyzer"},{"command":"rust-analyzer.parentModule","title":"Locate parent module","category":"rust-analyzer"},{"command":"rust-analyzer.childModules","title":"Locate child modules","category":"rust-analyzer"},{"command":"rust-analyzer.joinLines","title":"Join lines","category":"rust-analyzer"},{"command":"rust-analyzer.run","title":"Run","category":"rust-analyzer"},{"command":"rust-analyzer.copyRunCommandLine","title":"Copy Run Command Line","category":"rust-analyzer"},{"command":"rust-analyzer.debug","title":"Debug","category":"rust-analyzer"},{"command":"rust-analyzer.newDebugConfig","title":"Generate launch configuration","category":"rust-analyzer"},{"command":"rust-analyzer.analyzerStatus","title":"Status","category":"rust-analyzer"},{"command":"rust-analyzer.reloadWorkspace","title":"Reload workspace","category":"rust-analyzer"},{"command":"rust-analyzer.rebuildProcMacros","title":"Rebuild proc macros and build scripts","category":"rust-analyzer"},{"command":"rust-analyzer.restartServer","title":"Restart server","category":"rust-analyzer"},{"command":"rust-analyzer.startServer","title":"Start server","category":"rust-analyzer"},{"command":"rust-analyzer.stopServer","title":"Stop server","category":"rust-analyzer"},{"command":"rust-analyzer.onEnter","title":"Enhanced enter key","category":"rust-analyzer"},{"command":"rust-analyzer.ssr","title":"Structural Search Replace","category":"rust-analyzer"},{"command":"rust-analyzer.serverVersion","title":"Show RA Version","category":"rust-analyzer"},{"command":"rust-analyzer.openDocs","title":"Open Docs","category":"rust-analyzer"},{"command":"rust-analyzer.openExternalDocs","title":"Open External Docs","category":"rust-analyzer"},{"command":"rust-analyzer.openCargoToml","title":"Open Cargo.toml","category":"rust-analyzer"},{"command":"rust-analyzer.peekTests","title":"Peek Related Tests","category":"rust-analyzer"},{"command":"rust-analyzer.moveItemUp","title":"Move Item Up","category":"rust-analyzer"},{"command":"rust-analyzer.moveItemDown","title":"Move Item Down","category":"rust-analyzer"},{"command":"rust-analyzer.cancelFlycheck","title":"Cancel running flychecks","category":"rust-analyzer"},{"command":"rust-analyzer.runFlycheck","title":"Run flycheck","category":"rust-analyzer"},{"command":"rust-analyzer.clearFlycheck","title":"Clear flycheck diagnostics","category":"rust-analyzer"},{"command":"rust-analyzer.revealDependency","title":"Reveal File","category":"rust-analyzer"},{"command":"rust-analyzer.syntaxTreeReveal","title":"Reveal Syntax Element","icon":"$(search)","category":"rust-analyzer (syntax tree)"},{"command":"rust-analyzer.syntaxTreeCopy","title":"Copy","icon":"$(copy)","category":"rust-analyzer (syntax tree)"},{"command":"rust-analyzer.syntaxTreeHideWhitespace","title":"Hide Whitespace","icon":"$(filter)","category":"rust-analyzer (syntax tree)"},{"command":"rust-analyzer.syntaxTreeShowWhitespace","title":"Show Whitespace","icon":"$(filter-filled)","category":"rust-analyzer (syntax tree)"},{"command":"rust-analyzer.viewMemoryLayout","title":"View Memory Layout","category":"rust-analyzer"},{"command":"rust-analyzer.toggleCheckOnSave","title":"Toggle Check on Save","category":"rust-analyzer"},{"command":"rust-analyzer.toggleLSPLogs","title":"Toggle LSP Logs","category":"rust-analyzer"},{"command":"rust-analyzer.openWalkthrough","title":"Open Walkthrough","category":"rust-analyzer"}],"keybindings":[{"command":"rust-analyzer.parentModule","key":"ctrl+shift+u","when":"editorTextFocus && editorLangId == rust"},{"command":"rust-analyzer.joinLines","key":"ctrl+shift+j","when":"editorTextFocus && editorLangId == rust"}],"configuration":[{"title":"Rust Analyzer"},{"title":"Assist"},{"title":"Cache Priming"},{"title":"Cargo"},{"title":"Cfg"},{"title":"Check"},{"title":"Completion"},{"title":"Debug"},{"title":"Diagnostics"},{"title":"Files"},{"title":"Highlight Related"},{"title":"Hover"},{"title":"Imports"},{"title":"Inlay Hints"},{"title":"Interpret"},{"title":"Join Lines"},{"title":"Lens"},{"title":"Lru"},{"title":"Notifications"},{"title":"Proc Macro"},{"title":"References"},{"title":"Runnables"},{"title":"Rustc"},{"title":"Rustfmt"},{"title":"Semantic Highlighting"},{"title":"Signature Info"},{"title":"Typing"},{"title":"Vfs"},{"title":"Workspace"},{"title":"rust-analyzer","properties":{"rust-analyzer.restartServerOnConfigChange":{"description":"Restart the server automatically when settings that require a restart are changed.","default":false,"type":"boolean"},"rust-analyzer.showUnlinkedFileNotification":{"description":"Show a notification for unlinked files, prompting the user to add the corresponding Cargo.toml to the linked projects setting.","default":true,"type":"boolean"},"rust-analyzer.showRequestFailedErrorNotification":{"description":"Show error notifications when requests fail.","default":true,"type":"boolean"},"rust-analyzer.showDependenciesExplorer":{"description":"Show Rust Dependencies in the Explorer view.","default":true,"type":"boolean"},"rust-analyzer.showSyntaxTree":{"description":"Show Syntax Tree in the Explorer view.","default":false,"type":"boolean"},"rust-analyzer.testExplorer":{"description":"Show the Test Explorer view.","default":false,"type":"boolean"},"rust-analyzer.initializeStopped":{"markdownDescription":"Do not start rust-analyzer server when the extension is activated.","default":false,"type":"boolean"}}},{"title":"Runnables","properties":{"rust-analyzer.runnables.extraEnv":{"anyOf":[{"type":"null"},{"type":"array","items":{"type":"object","properties":{"platform":{"type":["null","string","array"],"default":null,"markdownDescription":"Platform(s) filter like \"win32\" or [\"linux\", \"win32\"]. See [process.platform](https://nodejs.org/api/process.html#processplatform) values."},"mask":{"type":"string","description":"Runnable name mask"},"env":{"type":"object","description":"Variables in form of { \"key\": \"value\"}"}}}},{"type":"object","description":"Variables in form of { \"key\": \"value\"}"}],"default":null,"markdownDescription":"Environment variables passed to the runnable launched using `Test` or `Debug` lens or `rust-analyzer.run` command."},"rust-analyzer.runnables.problemMatcher":{"type":"array","items":{"type":"string"},"default":["$rustc"],"markdownDescription":"Problem matchers to use for `rust-analyzer.run` command, eg `[\"$rustc\", \"$rust-panic\"]`."},"rust-analyzer.runnables.askBeforeUpdateTest":{"type":"boolean","default":true,"markdownDescription":"Ask before updating the test when running it."}}},{"title":"Status Bar","properties":{"rust-analyzer.statusBar.clickAction":{"type":"string","enum":["stopServer","openLogs"],"enumDescriptions":["Stop Server","Open Logs"],"default":"openLogs","markdownDescription":"Action to run when clicking the extension status bar item."},"rust-analyzer.statusBar.showStatusBar":{"markdownDescription":"When to show the extension status bar.\n\n`\"always\"` Always show the status bar.\n\n`\"never\"` Never show the status bar.\n\n`{ documentSelector: <DocumentSelector>[] }` Show the status bar if the open file matches any of the given document selectors.\n\nSee [VS Code -- DocumentSelector](https://code.visualstudio.com/api/references/document-selector) for more information.","anyOf":[{"type":"string","enum":["always","never"]},{"type":"object","properties":{"documentSelector":{"type":"array","items":{"type":"object","properties":{"language":{"type":"string"},"notebookType":{"type":"string"},"scheme":{"type":"string"},"pattern":{"type":"string"}}}}}}],"default":{"documentSelector":[{"language":"rust"},{"pattern":"**/Cargo.toml"},{"pattern":"**/Cargo.lock"},{"scheme":"output","pattern":"extension-output-rust-lang.rust-analyzer*"}]}}}},{"title":"Server","properties":{"rust-analyzer.server.path":{"type":["null","string"],"scope":"machine-overridable","default":null,"markdownDescription":"Path to rust-analyzer executable (points to bundled binary by default)."},"rust-analyzer.server.extraEnv":{"type":["null","object"],"additionalProperties":{"type":["string","number","null"]},"default":null,"markdownDescription":"Extra environment variables that will be passed to the rust-analyzer executable. Useful for passing e.g. `RA_LOG` for debugging."}}},{"title":"Trace","properties":{"rust-analyzer.trace.server":{"type":"string","scope":"window","enum":["off","messages","verbose"],"enumDescriptions":["No traces","Error only","Full log"],"default":"off","description":"Trace requests to the rust-analyzer (this is usually overly verbose and not recommended for regular users)."},"rust-analyzer.trace.extension":{"description":"Enable logging of VS Code extensions itself.","markdownDeprecationMessage":"Log level is now controlled by the [Developer: Set Log Level...](command:workbench.action.setLogLevel) command.You can set the log level for the current session and also the default log level from there. This is also available by clicking the gear icon on the OUTPUT tab when Rust Analyzer Client is visible or by passing the --log rust-lang.rust-analyzer:debug parameter to VS Code.","type":"boolean","default":false}}},{"title":"Debug","properties":{"rust-analyzer.debug.engine":{"type":"string","enum":["auto","llvm-vs-code-extensions.lldb-dap","vadimcn.vscode-lldb","ms-vscode.cpptools","webfreak.debug"],"default":"auto","description":"Preferred debug engine.","markdownEnumDescriptions":["Use the first available extension out of [LLDB DAP](https://marketplace.visualstudio.com/items?itemName=llvm-vs-code-extensions.lldb-dap), [CodeLLDB](https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb), [C/C++ for Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools), and [Native Debug](https://marketplace.visualstudio.com/items?itemName=webfreak.debug).","Use [LLDB DAP](https://marketplace.visualstudio.com/items?itemName=llvm-vs-code-extensions.lldb-dap)","Use [CodeLLDB](https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb)","Use [C/C++ for Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools)","Use [Native Debug](https://marketplace.visualstudio.com/items?itemName=webfreak.debug)"]},"rust-analyzer.debug.sourceFileMap":{"type":["object","string"],"const":"auto","description":"Optional source file mappings passed to the debug engine.","default":{"/rustc/<id>":"${env:USERPROFILE}/.rustup/toolchains/<toolchain-id>/lib/rustlib/src/rust"}},"rust-analyzer.debug.buildBeforeRestart":{"markdownDescription":"Whether to rebuild the project modules before debugging the same test again","type":"boolean","default":false},"rust-analyzer.debug.engineSettings":{"type":"object","default":{},"markdownDescription":"Optional settings passed to the debug engine. Example: `{ \"lldb\": { \"terminal\":\"external\"} }`"}}},{"title":"Typing","properties":{"rust-analyzer.typing.continueCommentsOnNewline":{"markdownDescription":"Whether to prefix newlines after comments with the corresponding comment prefix.","default":true,"type":"boolean"}}},{"title":"Diagnostics","properties":{"rust-analyzer.diagnostics.previewRustcOutput":{"markdownDescription":"Whether to show the main part of the rendered rustc output of a diagnostic message.","default":false,"type":"boolean"},"rust-analyzer.diagnostics.useRustcErrorCode":{"markdownDescription":"Whether to show diagnostics using the original rustc error code. If this is false, all rustc diagnostics will have the code 'rustc(Click for full compiler diagnostics)'","default":false,"type":"boolean"}}},{},{"title":"Assist","properties":{"rust-analyzer.assist.emitMustUse":{"markdownDescription":"Insert #[must_use] when generating `as_` methods for enum variants.","default":false,"type":"boolean"}}},{"title":"Assist","properties":{"rust-analyzer.assist.expressionFillDefault":{"markdownDescription":"Placeholder expression to use for missing expressions in assists.","default":"todo","type":"string","enum":["todo","default"],"enumDescriptions":["Fill missing expressions with the `todo` macro","Fill missing expressions with reasonable defaults, `new` or `default` constructors."]}}},{"title":"Assist","properties":{"rust-analyzer.assist.preferSelf":{"markdownDescription":"Prefer to use `Self` over the type name when inserting a type (e.g. in \"fill match arms\" assist).","default":false,"type":"boolean"}}},{"title":"Assist","properties":{"rust-analyzer.assist.termSearch.borrowcheck":{"markdownDescription":"Enable borrow checking for term search code assists. If set to false, also there will be\nmore suggestions, but some of them may not borrow-check.","default":true,"type":"boolean"}}},{"title":"Assist","properties":{"rust-analyzer.assist.termSearch.fuel":{"markdownDescription":"Term search fuel in \"units of work\" for assists (Defaults to 1800).","default":1800,"type":"integer","minimum":0}}},{"title":"Cache Priming","properties":{"rust-analyzer.cachePriming.enable":{"markdownDescription":"Warm up caches on project load.","default":true,"type":"boolean"}}},{"title":"Cache Priming","properties":{"rust-analyzer.cachePriming.numThreads":{"markdownDescription":"How many worker threads to handle priming caches. The default `0` means to pick\nautomatically.","default":"physical","anyOf":[{"type":"number","minimum":0,"maximum":255},{"type":"string","enum":["physical","logical"],"enumDescriptions":["Use the number of physical cores","Use the number of logical cores"]}]}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.allTargets":{"markdownDescription":"Pass `--all-targets` to cargo invocation.","default":true,"type":"boolean"}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.autoreload":{"markdownDescription":"Automatically refresh project info via `cargo metadata` on\n`Cargo.toml` or `.cargo/config.toml` changes.","default":true,"type":"boolean"}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.buildScripts.enable":{"markdownDescription":"Run build scripts (`build.rs`) for more precise code analysis.","default":true,"type":"boolean"}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.buildScripts.invocationStrategy":{"markdownDescription":"Specifies the invocation strategy to use when running the build scripts command.\nIf `per_workspace` is set, the command will be executed for each Rust workspace with the\nworkspace as the working directory.\nIf `once` is set, the command will be executed once with the opened project as the\nworking directory.\nThis config only has an effect when `#rust-analyzer.cargo.buildScripts.overrideCommand#`\nis set.","default":"per_workspace","type":"string","enum":["per_workspace","once"],"enumDescriptions":["The command will be executed for each Rust workspace with the workspace as the working directory.","The command will be executed once with the opened project as the working directory."]}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.buildScripts.overrideCommand":{"markdownDescription":"Override the command rust-analyzer uses to run build scripts and\nbuild procedural macros. The command is required to output json\nand should therefore include `--message-format=json` or a similar\noption.\n\nIf there are multiple linked projects/workspaces, this command is invoked for\neach of them, with the working directory being the workspace root\n(i.e., the folder containing the `Cargo.toml`). This can be overwritten\nby changing `#rust-analyzer.cargo.buildScripts.invocationStrategy#`.\n\nBy default, a cargo invocation will be constructed for the configured\ntargets and features, with the following base command line:\n\n```bash\ncargo check --quiet --workspace --message-format=json --all-targets --keep-going\n```\n\nNote: The option must be specified as an array of command line arguments, with\nthe first argument being the name of the command to run.","default":null,"type":["null","array"],"items":{"type":"string"}}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.buildScripts.rebuildOnSave":{"markdownDescription":"Rerun proc-macros building/build-scripts running when proc-macro\nor build-script sources change and are saved.","default":true,"type":"boolean"}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.buildScripts.useRustcWrapper":{"markdownDescription":"Use `RUSTC_WRAPPER=rust-analyzer` when running build scripts to\navoid checking unnecessary things.","default":true,"type":"boolean"}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.cfgs":{"markdownDescription":"List of cfg options to enable with the given values.\n\nTo enable a name without a value, use `\"key\"`.\nTo enable a name with a value, use `\"key=value\"`.\nTo disable, prefix the entry with a `!`.","default":["debug_assertions","miri"],"type":"array","items":{"type":"string"}}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.extraArgs":{"markdownDescription":"Extra arguments that are passed to every cargo invocation.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.extraEnv":{"markdownDescription":"Extra environment variables that will be set when running cargo, rustc\nor other commands within the workspace. Useful for setting RUSTFLAGS.","default":{},"type":"object"}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.features":{"markdownDescription":"List of features to activate.\n\nSet this to `\"all\"` to pass `--all-features` to cargo.","default":[],"anyOf":[{"type":"string","enum":["all"],"enumDescriptions":["Pass `--all-features` to cargo"]},{"type":"array","items":{"type":"string"}}]}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.noDefaultFeatures":{"markdownDescription":"Whether to pass `--no-default-features` to cargo.","default":false,"type":"boolean"}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.noDeps":{"markdownDescription":"Whether to skip fetching dependencies. If set to \"true\", the analysis is performed\nentirely offline, and Cargo metadata for dependencies is not fetched.","default":false,"type":"boolean"}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.sysroot":{"markdownDescription":"Relative path to the sysroot, or \"discover\" to try to automatically find it via\n\"rustc --print sysroot\".\n\nUnsetting this disables sysroot loading.\n\nThis option does not take effect until rust-analyzer is restarted.","default":"discover","type":["null","string"]}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.sysrootSrc":{"markdownDescription":"Relative path to the sysroot library sources. If left unset, this will default to\n`{cargo.sysroot}/lib/rustlib/src/rust/library`.\n\nThis option does not take effect until rust-analyzer is restarted.","default":null,"type":["null","string"]}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.target":{"markdownDescription":"Compilation target override (target tuple).","default":null,"type":["null","string"]}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.targetDir":{"markdownDescription":"Optional path to a rust-analyzer specific target directory.\nThis prevents rust-analyzer's `cargo check` and initial build-script and proc-macro\nbuilding from locking the `Cargo.lock` at the expense of duplicating build artifacts.\n\nSet to `true` to use a subdirectory of the existing target directory or\nset to a path relative to the workspace to use that path.","default":null,"anyOf":[{"type":"null"},{"type":"boolean"},{"type":"string"}]}}},{"title":"Cfg","properties":{"rust-analyzer.cfg.setTest":{"markdownDescription":"Set `cfg(test)` for local crates. Defaults to true.","default":true,"type":"boolean"}}},{"title":"rust-analyzer","properties":{"rust-analyzer.checkOnSave":{"markdownDescription":"Run the check command for diagnostics on save.","default":true,"type":"boolean"}}},{"title":"Check","properties":{"rust-analyzer.check.allTargets":{"markdownDescription":"Check all targets and tests (`--all-targets`). Defaults to\n`#rust-analyzer.cargo.allTargets#`.","default":null,"type":["null","boolean"]}}},{"title":"Check","properties":{"rust-analyzer.check.command":{"markdownDescription":"Cargo command to use for `cargo check`.","default":"check","type":"string"}}},{"title":"Check","properties":{"rust-analyzer.check.extraArgs":{"markdownDescription":"Extra arguments for `cargo check`.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"Check","properties":{"rust-analyzer.check.extraEnv":{"markdownDescription":"Extra environment variables that will be set when running `cargo check`.\nExtends `#rust-analyzer.cargo.extraEnv#`.","default":{},"type":"object"}}},{"title":"Check","properties":{"rust-analyzer.check.features":{"markdownDescription":"List of features to activate. Defaults to\n`#rust-analyzer.cargo.features#`.\n\nSet to `\"all\"` to pass `--all-features` to Cargo.","default":null,"anyOf":[{"type":"string","enum":["all"],"enumDescriptions":["Pass `--all-features` to cargo"]},{"type":"array","items":{"type":"string"}},{"type":"null"}]}}},{"title":"Check","properties":{"rust-analyzer.check.ignore":{"markdownDescription":"List of `cargo check` (or other command specified in `check.command`) diagnostics to ignore.\n\nFor example for `cargo check`: `dead_code`, `unused_imports`, `unused_variables`,...","default":[],"type":"array","items":{"type":"string"},"uniqueItems":true}}},{"title":"Check","properties":{"rust-analyzer.check.invocationStrategy":{"markdownDescription":"Specifies the invocation strategy to use when running the check command.\nIf `per_workspace` is set, the command will be executed for each workspace.\nIf `once` is set, the command will be executed once.\nThis config only has an effect when `#rust-analyzer.check.overrideCommand#`\nis set.","default":"per_workspace","type":"string","enum":["per_workspace","once"],"enumDescriptions":["The command will be executed for each Rust workspace with the workspace as the working directory.","The command will be executed once with the opened project as the working directory."]}}},{"title":"Check","properties":{"rust-analyzer.check.noDefaultFeatures":{"markdownDescription":"Whether to pass `--no-default-features` to Cargo. Defaults to\n`#rust-analyzer.cargo.noDefaultFeatures#`.","default":null,"type":["null","boolean"]}}},{"title":"Check","properties":{"rust-analyzer.check.overrideCommand":{"markdownDescription":"Override the command rust-analyzer uses instead of `cargo check` for\ndiagnostics on save. The command is required to output json and\nshould therefore include `--message-format=json` or a similar option\n(if your client supports the `colorDiagnosticOutput` experimental\ncapability, you can use `--message-format=json-diagnostic-rendered-ansi`).\n\nIf you're changing this because you're using some tool wrapping\nCargo, you might also want to change\n`#rust-analyzer.cargo.buildScripts.overrideCommand#`.\n\nIf there are multiple linked projects/workspaces, this command is invoked for\neach of them, with the working directory being the workspace root\n(i.e., the folder containing the `Cargo.toml`). This can be overwritten\nby changing `#rust-analyzer.check.invocationStrategy#`.\n\nIf `$saved_file` is part of the command, rust-analyzer will pass\nthe absolute path of the saved file to the provided command. This is\nintended to be used with non-Cargo build systems.\nNote that `$saved_file` is experimental and may be removed in the future.\n\nAn example command would be:\n\n```bash\ncargo check --workspace --message-format=json --all-targets\n```\n\nNote: The option must be specified as an array of command line arguments, with\nthe first argument being the name of the command to run.","default":null,"type":["null","array"],"items":{"type":"string"}}}},{"title":"Check","properties":{"rust-analyzer.check.targets":{"markdownDescription":"Check for specific targets. Defaults to `#rust-analyzer.cargo.target#` if empty.\n\nCan be a single target, e.g. `\"x86_64-unknown-linux-gnu\"` or a list of targets, e.g.\n`[\"aarch64-apple-darwin\", \"x86_64-apple-darwin\"]`.\n\nAliased as `\"checkOnSave.targets\"`.","default":null,"anyOf":[{"type":"null"},{"type":"string"},{"type":"array","items":{"type":"string"}}]}}},{"title":"Check","properties":{"rust-analyzer.check.workspace":{"markdownDescription":"Whether `--workspace` should be passed to `cargo check`.\nIf false, `-p <package>` will be passed instead if applicable. In case it is not, no\ncheck will be performed.","default":true,"type":"boolean"}}},{"title":"Completion","properties":{"rust-analyzer.completion.addSemicolonToUnit":{"markdownDescription":"Automatically add a semicolon when completing unit-returning functions.\n\nIn `match` arms it completes a comma instead.","default":true,"type":"boolean"}}},{"title":"Completion","properties":{"rust-analyzer.completion.autoAwait.enable":{"markdownDescription":"Show method calls and field accesses completions with `await` prefixed to them when\ncompleting on a future.","default":true,"type":"boolean"}}},{"title":"Completion","properties":{"rust-analyzer.completion.autoIter.enable":{"markdownDescription":"Show method call completions with `iter()` or `into_iter()` prefixed to them when\ncompleting on a type that has them.","default":true,"type":"boolean"}}},{"title":"Completion","properties":{"rust-analyzer.completion.autoimport.enable":{"markdownDescription":"Show completions that automatically add imports when completed.\n\nNote that your client must specify the `additionalTextEdits` LSP client capability to\ntruly have this feature enabled.","default":true,"type":"boolean"}}},{"title":"Completion","properties":{"rust-analyzer.completion.autoimport.exclude":{"markdownDescription":"A list of full paths to items to exclude from auto-importing completions.\n\nTraits in this list won't have their methods suggested in completions unless the trait\nis in scope.\n\nYou can either specify a string path which defaults to type \"always\" or use the more\nverbose form `{ \"path\": \"path::to::item\", type: \"always\" }`.\n\nFor traits the type \"methods\" can be used to only exclude the methods but not the trait\nitself.\n\nThis setting also inherits `#rust-analyzer.completion.excludeTraits#`.","default":[{"path":"core::borrow::Borrow","type":"methods"},{"path":"core::borrow::BorrowMut","type":"methods"}],"type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"path":{"type":"string"},"type":{"type":"string","enum":["always","methods"],"enumDescriptions":["Do not show this item or its methods (if it is a trait) in auto-import completions.","Do not show this traits methods in auto-import completions."]}}}]}}}},{"title":"Completion","properties":{"rust-analyzer.completion.autoself.enable":{"markdownDescription":"Show method calls and field access completions with `self` prefixed to them when\ninside a method.","default":true,"type":"boolean"}}},{"title":"Completion","properties":{"rust-analyzer.completion.callable.snippets":{"markdownDescription":"Add parenthesis and argument snippets when completing function.","default":"fill_arguments","type":"string","enum":["fill_arguments","add_parentheses","none"],"enumDescriptions":["Add call parentheses and pre-fill arguments.","Add call parentheses.","Do no snippet completions for callables."]}}},{"title":"Completion","properties":{"rust-analyzer.completion.excludeTraits":{"markdownDescription":"A list of full paths to traits whose methods to exclude from completion.\n\nMethods from these traits won't be completed, even if the trait is in scope. However,\nthey will still be suggested on expressions whose type is `dyn Trait`, `impl Trait` or\n`T where T: Trait`.\n\nNote that the trait themselves can still be completed.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"Completion","properties":{"rust-analyzer.completion.fullFunctionSignatures.enable":{"markdownDescription":"Show full function / method signatures in completion docs.","default":false,"type":"boolean"}}},{"title":"Completion","properties":{"rust-analyzer.completion.hideDeprecated":{"markdownDescription":"Omit deprecated items from completions. By default they are marked as deprecated but not\nhidden.","default":false,"type":"boolean"}}},{"title":"Completion","properties":{"rust-analyzer.completion.limit":{"markdownDescription":"Maximum number of completions to return. If `None`, the limit is infinite.","default":null,"type":["null","integer"],"minimum":0}}},{"title":"Completion","properties":{"rust-analyzer.completion.postfix.enable":{"markdownDescription":"Show postfix snippets like `dbg`, `if`, `not`, etc.","default":true,"type":"boolean"}}},{"title":"Completion","properties":{"rust-analyzer.completion.privateEditable.enable":{"markdownDescription":"Show completions of private items and fields that are defined in the current workspace\neven if they are not visible at the current position.","default":false,"type":"boolean"}}},{"title":"Completion","properties":{"rust-analyzer.completion.snippets.custom":{"markdownDescription":"Custom completion snippets.","default":{"Ok":{"postfix":"ok","body":"Ok(${receiver})","description":"Wrap the expression in a `Result::Ok`","scope":"expr"},"Box::pin":{"postfix":"pinbox","body":"Box::pin(${receiver})","requires":"std::boxed::Box","description":"Put the expression into a pinned `Box`","scope":"expr"},"Arc::new":{"postfix":"arc","body":"Arc::new(${receiver})","requires":"std::sync::Arc","description":"Put the expression into an `Arc`","scope":"expr"},"Some":{"postfix":"some","body":"Some(${receiver})","description":"Wrap the expression in an `Option::Some`","scope":"expr"},"Err":{"postfix":"err","body":"Err(${receiver})","description":"Wrap the expression in a `Result::Err`","scope":"expr"},"Rc::new":{"postfix":"rc","body":"Rc::new(${receiver})","requires":"std::rc::Rc","description":"Put the expression into an `Rc`","scope":"expr"}},"type":"object"}}},{"title":"Completion","properties":{"rust-analyzer.completion.termSearch.enable":{"markdownDescription":"Enable term search based snippets like `Some(foo.bar().baz())`.","default":false,"type":"boolean"}}},{"title":"Completion","properties":{"rust-analyzer.completion.termSearch.fuel":{"markdownDescription":"Term search fuel in \"units of work\" for autocompletion (Defaults to 1000).","default":1000,"type":"integer","minimum":0}}},{"title":"Diagnostics","properties":{"rust-analyzer.diagnostics.disabled":{"markdownDescription":"List of rust-analyzer diagnostics to disable.","default":[],"type":"array","items":{"type":"string"},"uniqueItems":true}}},{"title":"Diagnostics","properties":{"rust-analyzer.diagnostics.enable":{"markdownDescription":"Show native rust-analyzer diagnostics.","default":true,"type":"boolean"}}},{"title":"Diagnostics","properties":{"rust-analyzer.diagnostics.experimental.enable":{"markdownDescription":"Show experimental rust-analyzer diagnostics that might have more false positives than\nusual.","default":false,"type":"boolean"}}},{"title":"Diagnostics","properties":{"rust-analyzer.diagnostics.remapPrefix":{"markdownDescription":"Map of prefixes to be substituted when parsing diagnostic file paths. This should be the\nreverse mapping of what is passed to `rustc` as `--remap-path-prefix`.","default":{},"type":"object"}}},{"title":"Diagnostics","properties":{"rust-analyzer.diagnostics.styleLints.enable":{"markdownDescription":"Run additional style lints.","default":false,"type":"boolean"}}},{"title":"Diagnostics","properties":{"rust-analyzer.diagnostics.warningsAsHint":{"markdownDescription":"List of warnings that should be displayed with hint severity.\n\nThe warnings will be indicated by faded text or three dots in code and will not show up\nin the `Problems Panel`.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"Diagnostics","properties":{"rust-analyzer.diagnostics.warningsAsInfo":{"markdownDescription":"List of warnings that should be displayed with info severity.\n\nThe warnings will be indicated by a blue squiggly underline in code and a blue icon in\nthe `Problems Panel`.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"Document","properties":{"rust-analyzer.document.symbol.search.excludeLocals":{"markdownDescription":"Exclude all locals from document symbol search.","default":true,"type":"boolean"}}},{"title":"Files","properties":{"rust-analyzer.files.exclude":{"markdownDescription":"List of files to ignore\n\nThese paths (file/directories) will be ignored by rust-analyzer. They are relative to\nthe workspace root, and globs are not supported. You may also need to add the folders to\nCode's `files.watcherExclude`.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"Files","properties":{"rust-analyzer.files.watcher":{"markdownDescription":"Controls file watching implementation.","default":"client","type":"string","enum":["client","server"],"enumDescriptions":["Use the client (editor) to watch files for changes","Use server-side file watching"]}}},{"title":"Highlight Related","properties":{"rust-analyzer.highlightRelated.branchExitPoints.enable":{"markdownDescription":"Highlight related return values while the cursor is on any `match`, `if`, or match arm\narrow (`=>`).","default":true,"type":"boolean"}}},{"title":"Highlight Related","properties":{"rust-analyzer.highlightRelated.breakPoints.enable":{"markdownDescription":"Highlight related references while the cursor is on `break`, `loop`, `while`, or `for`\nkeywords.","default":true,"type":"boolean"}}},{"title":"Highlight Related","properties":{"rust-analyzer.highlightRelated.closureCaptures.enable":{"markdownDescription":"Highlight all captures of a closure while the cursor is on the `|` or move keyword of a closure.","default":true,"type":"boolean"}}},{"title":"Highlight Related","properties":{"rust-analyzer.highlightRelated.exitPoints.enable":{"markdownDescription":"Highlight all exit points while the cursor is on any `return`, `?`, `fn`, or return type\narrow (`->`).","default":true,"type":"boolean"}}},{"title":"Highlight Related","properties":{"rust-analyzer.highlightRelated.references.enable":{"markdownDescription":"Highlight related references while the cursor is on any identifier.","default":true,"type":"boolean"}}},{"title":"Highlight Related","properties":{"rust-analyzer.highlightRelated.yieldPoints.enable":{"markdownDescription":"Highlight all break points for a loop or block context while the cursor is on any\n`async` or `await` keywords.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.actions.debug.enable":{"markdownDescription":"Show `Debug` action. Only applies when `#rust-analyzer.hover.actions.enable#` is set.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.actions.enable":{"markdownDescription":"Show HoverActions in Rust files.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.actions.gotoTypeDef.enable":{"markdownDescription":"Show `Go to Type Definition` action. Only applies when\n`#rust-analyzer.hover.actions.enable#` is set.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.actions.implementations.enable":{"markdownDescription":"Show `Implementations` action. Only applies when `#rust-analyzer.hover.actions.enable#`\nis set.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.actions.references.enable":{"markdownDescription":"Show `References` action. Only applies when `#rust-analyzer.hover.actions.enable#` is\nset.","default":false,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.actions.run.enable":{"markdownDescription":"Show `Run` action. Only applies when `#rust-analyzer.hover.actions.enable#` is set.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.actions.updateTest.enable":{"markdownDescription":"Show `Update Test` action. Only applies when `#rust-analyzer.hover.actions.enable#` and\n`#rust-analyzer.hover.actions.run.enable#` are set.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.documentation.enable":{"markdownDescription":"Show documentation on hover.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.documentation.keywords.enable":{"markdownDescription":"Show keyword hover popups. Only applies when\n`#rust-analyzer.hover.documentation.enable#` is set.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.dropGlue.enable":{"markdownDescription":"Show drop glue information on hover.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.links.enable":{"markdownDescription":"Use markdown syntax for links on hover.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.maxSubstitutionLength":{"markdownDescription":"Show what types are used as generic arguments in calls etc. on hover, and limit the max\nlength to show such types, beyond which they will be shown with ellipsis.\n\nThis can take three values: `null` means \"unlimited\", the string `\"hide\"` means to not\nshow generic substitutions at all, and a number means to limit them to X characters.\n\nThe default is 20 characters.","default":20,"anyOf":[{"type":"null"},{"type":"string","enum":["hide"]},{"type":"integer"}]}}},{"title":"Hover","properties":{"rust-analyzer.hover.memoryLayout.alignment":{"markdownDescription":"How to render the align information in a memory layout hover.","default":"hexadecimal","anyOf":[{"type":"null"},{"type":"string","enum":["both","decimal","hexadecimal"],"enumDescriptions":["Render as 12 (0xC)","Render as 12","Render as 0xC"]}]}}},{"title":"Hover","properties":{"rust-analyzer.hover.memoryLayout.enable":{"markdownDescription":"Show memory layout data on hover.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.memoryLayout.niches":{"markdownDescription":"How to render the niche information in a memory layout hover.","default":false,"type":["null","boolean"]}}},{"title":"Hover","properties":{"rust-analyzer.hover.memoryLayout.offset":{"markdownDescription":"How to render the offset information in a memory layout hover.","default":"hexadecimal","anyOf":[{"type":"null"},{"type":"string","enum":["both","decimal","hexadecimal"],"enumDescriptions":["Render as 12 (0xC)","Render as 12","Render as 0xC"]}]}}},{"title":"Hover","properties":{"rust-analyzer.hover.memoryLayout.padding":{"markdownDescription":"How to render the padding information in a memory layout hover.","default":null,"anyOf":[{"type":"null"},{"type":"string","enum":["both","decimal","hexadecimal"],"enumDescriptions":["Render as 12 (0xC)","Render as 12","Render as 0xC"]}]}}},{"title":"Hover","properties":{"rust-analyzer.hover.memoryLayout.size":{"markdownDescription":"How to render the size information in a memory layout hover.","default":"both","anyOf":[{"type":"null"},{"type":"string","enum":["both","decimal","hexadecimal"],"enumDescriptions":["Render as 12 (0xC)","Render as 12","Render as 0xC"]}]}}},{"title":"Hover","properties":{"rust-analyzer.hover.show.enumVariants":{"markdownDescription":"How many variants of an enum to display when hovering on. Show none if empty.","default":5,"type":["null","integer"],"minimum":0}}},{"title":"Hover","properties":{"rust-analyzer.hover.show.fields":{"markdownDescription":"How many fields of a struct, variant or union to display when hovering on. Show none if\nempty.","default":5,"type":["null","integer"],"minimum":0}}},{"title":"Hover","properties":{"rust-analyzer.hover.show.traitAssocItems":{"markdownDescription":"How many associated items of a trait to display when hovering a trait.","default":null,"type":["null","integer"],"minimum":0}}},{"title":"Imports","properties":{"rust-analyzer.imports.granularity.enforce":{"markdownDescription":"Enforce the import granularity setting for all files. If set to false rust-analyzer will\ntry to keep import styles consistent per file.","default":false,"type":"boolean"}}},{"title":"Imports","properties":{"rust-analyzer.imports.granularity.group":{"markdownDescription":"How imports should be grouped into use statements.","default":"crate","type":"string","enum":["preserve","crate","module","item","one"],"enumDescriptions":["Do not change the granularity of any imports and preserve the original structure written by the developer.","Merge imports from the same crate into a single use statement. Conversely, imports from different crates are split into separate statements.","Merge imports from the same module into a single use statement. Conversely, imports from different modules are split into separate statements.","Flatten imports so that each has its own use statement.","Merge all imports into a single use statement as long as they have the same visibility and attributes."]}}},{"title":"Imports","properties":{"rust-analyzer.imports.group.enable":{"markdownDescription":"Group inserted imports by the [following\norder](https://rust-analyzer.github.io/book/features.html#auto-import). Groups are\nseparated by newlines.","default":true,"type":"boolean"}}},{"title":"Imports","properties":{"rust-analyzer.imports.merge.glob":{"markdownDescription":"Allow import insertion to merge new imports into single path glob imports like `use\nstd::fmt::*;`.","default":true,"type":"boolean"}}},{"title":"Imports","properties":{"rust-analyzer.imports.preferNoStd":{"markdownDescription":"Prefer to unconditionally use imports of the core and alloc crate, over the std crate.","default":false,"type":"boolean"}}},{"title":"Imports","properties":{"rust-analyzer.imports.preferPrelude":{"markdownDescription":"Prefer import paths containing a `prelude` module.","default":false,"type":"boolean"}}},{"title":"Imports","properties":{"rust-analyzer.imports.prefix":{"markdownDescription":"The path structure for newly inserted paths to use.","default":"crate","type":"string","enum":["plain","self","crate"],"enumDescriptions":["Insert import paths relative to the current module, using up to one `super` prefix if the parent module contains the requested item.","Insert import paths relative to the current module, using up to one `super` prefix if the parent module contains the requested item. Prefixes `self` in front of the path if it starts with a module.","Force import paths to be absolute by always starting them with `crate` or the extern crate name they come from."]}}},{"title":"Imports","properties":{"rust-analyzer.imports.prefixExternPrelude":{"markdownDescription":"Prefix external (including std, core) crate imports with `::`.\n\nE.g. `use ::std::io::Read;`.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.bindingModeHints.enable":{"markdownDescription":"Show inlay type hints for binding modes.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.chainingHints.enable":{"markdownDescription":"Show inlay type hints for method chains.","default":true,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.closingBraceHints.enable":{"markdownDescription":"Show inlay hints after a closing `}` to indicate what item it belongs to.","default":true,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.closingBraceHints.minLines":{"markdownDescription":"Minimum number of lines required before the `}` until the hint is shown (set to 0 or 1\nto always show them).","default":25,"type":"integer","minimum":0}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.closureCaptureHints.enable":{"markdownDescription":"Show inlay hints for closure captures.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.closureReturnTypeHints.enable":{"markdownDescription":"Show inlay type hints for return types of closures.","default":"never","type":"string","enum":["always","never","with_block"],"enumDescriptions":["Always show type hints for return types of closures.","Never show type hints for return types of closures.","Only show type hints for return types of closures with blocks."]}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.closureStyle":{"markdownDescription":"Closure notation in type and chaining inlay hints.","default":"impl_fn","type":"string","enum":["impl_fn","rust_analyzer","with_id","hide"],"enumDescriptions":["`impl_fn`: `impl FnMut(i32, u64) -> i8`","`rust_analyzer`: `|i32, u64| -> i8`","`with_id`: `{closure#14352}`, where that id is the unique number of the closure in r-a internals","`hide`: Shows `...` for every closure type"]}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.discriminantHints.enable":{"markdownDescription":"Show enum variant discriminant hints.","default":"never","type":"string","enum":["always","never","fieldless"],"enumDescriptions":["Always show all discriminant hints.","Never show discriminant hints.","Only show discriminant hints on fieldless enum variants."]}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.expressionAdjustmentHints.enable":{"markdownDescription":"Show inlay hints for type adjustments.","default":"never","type":"string","enum":["always","never","reborrow"],"enumDescriptions":["Always show all adjustment hints.","Never show adjustment hints.","Only show auto borrow and dereference adjustment hints."]}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.expressionAdjustmentHints.hideOutsideUnsafe":{"markdownDescription":"Hide inlay hints for type adjustments outside of `unsafe` blocks.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.expressionAdjustmentHints.mode":{"markdownDescription":"Show inlay hints as postfix ops (`.*` instead of `*`, etc).","default":"prefix","type":"string","enum":["prefix","postfix","prefer_prefix","prefer_postfix"],"enumDescriptions":["Always show adjustment hints as prefix (`*expr`).","Always show adjustment hints as postfix (`expr.*`).","Show prefix or postfix depending on which uses less parenthesis, preferring prefix.","Show prefix or postfix depending on which uses less parenthesis, preferring postfix."]}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.genericParameterHints.const.enable":{"markdownDescription":"Show const generic parameter name inlay hints.","default":true,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.genericParameterHints.lifetime.enable":{"markdownDescription":"Show generic lifetime parameter name inlay hints.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.genericParameterHints.type.enable":{"markdownDescription":"Show generic type parameter name inlay hints.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.implicitDrops.enable":{"markdownDescription":"Show implicit drop hints.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.implicitSizedBoundHints.enable":{"markdownDescription":"Show inlay hints for the implied type parameter `Sized` bound.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.lifetimeElisionHints.enable":{"markdownDescription":"Show inlay type hints for elided lifetimes in function signatures.","default":"never","type":"string","enum":["always","never","skip_trivial"],"enumDescriptions":["Always show lifetime elision hints.","Never show lifetime elision hints.","Only show lifetime elision hints if a return type is involved."]}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.lifetimeElisionHints.useParameterNames":{"markdownDescription":"Prefer using parameter names as the name for elided lifetime hints if possible.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.maxLength":{"markdownDescription":"Maximum length for inlay hints. Set to null to have an unlimited length.","default":25,"type":["null","integer"],"minimum":0}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.parameterHints.enable":{"markdownDescription":"Show function parameter name inlay hints at the call site.","default":true,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.rangeExclusiveHints.enable":{"markdownDescription":"Show exclusive range inlay hints.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.reborrowHints.enable":{"markdownDescription":"Show inlay hints for compiler inserted reborrows.\n\nThis setting is deprecated in favor of\n#rust-analyzer.inlayHints.expressionAdjustmentHints.enable#.","default":"never","type":"string","enum":["always","never","mutable"],"enumDescriptions":["Always show reborrow hints.","Never show reborrow hints.","Only show mutable reborrow hints."]}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.renderColons":{"markdownDescription":"Whether to render leading colons for type hints, and trailing colons for parameter hints.","default":true,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.typeHints.enable":{"markdownDescription":"Show inlay type hints for variables.","default":true,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.typeHints.hideClosureInitialization":{"markdownDescription":"Hide inlay type hints for `let` statements that initialize to a closure.\n\nOnly applies to closures with blocks, same as\n`#rust-analyzer.inlayHints.closureReturnTypeHints.enable#`.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.typeHints.hideClosureParameter":{"markdownDescription":"Hide inlay parameter type hints for closures.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.typeHints.hideNamedConstructor":{"markdownDescription":"Hide inlay type hints for constructors.","default":false,"type":"boolean"}}},{"title":"Interpret","properties":{"rust-analyzer.interpret.tests":{"markdownDescription":"Enable the experimental support for interpreting tests.","default":false,"type":"boolean"}}},{"title":"Join Lines","properties":{"rust-analyzer.joinLines.joinAssignments":{"markdownDescription":"Join lines merges consecutive declaration and initialization of an assignment.","default":true,"type":"boolean"}}},{"title":"Join Lines","properties":{"rust-analyzer.joinLines.joinElseIf":{"markdownDescription":"Join lines inserts else between consecutive ifs.","default":true,"type":"boolean"}}},{"title":"Join Lines","properties":{"rust-analyzer.joinLines.removeTrailingComma":{"markdownDescription":"Join lines removes trailing commas.","default":true,"type":"boolean"}}},{"title":"Join Lines","properties":{"rust-analyzer.joinLines.unwrapTrivialBlock":{"markdownDescription":"Join lines unwraps trivial blocks.","default":true,"type":"boolean"}}},{"title":"Lens","properties":{"rust-analyzer.lens.debug.enable":{"markdownDescription":"Show `Debug` lens. Only applies when `#rust-analyzer.lens.enable#` is set.","default":true,"type":"boolean"}}},{"title":"Lens","properties":{"rust-analyzer.lens.enable":{"markdownDescription":"Show CodeLens in Rust files.","default":true,"type":"boolean"}}},{"title":"Lens","properties":{"rust-analyzer.lens.implementations.enable":{"markdownDescription":"Show `Implementations` lens. Only applies when `#rust-analyzer.lens.enable#` is set.","default":true,"type":"boolean"}}},{"title":"Lens","properties":{"rust-analyzer.lens.location":{"markdownDescription":"Where to render annotations.","default":"above_name","type":"string","enum":["above_name","above_whole_item"],"enumDescriptions":["Render annotations above the name of the item.","Render annotations above the whole item, including documentation comments and attributes."]}}},{"title":"Lens","properties":{"rust-analyzer.lens.references.adt.enable":{"markdownDescription":"Show `References` lens for Struct, Enum, and Union. Only applies when\n`#rust-analyzer.lens.enable#` is set.","default":false,"type":"boolean"}}},{"title":"Lens","properties":{"rust-analyzer.lens.references.enumVariant.enable":{"markdownDescription":"Show `References` lens for Enum Variants. Only applies when\n`#rust-analyzer.lens.enable#` is set.","default":false,"type":"boolean"}}},{"title":"Lens","properties":{"rust-analyzer.lens.references.method.enable":{"markdownDescription":"Show `Method References` lens. Only applies when `#rust-analyzer.lens.enable#` is set.","default":false,"type":"boolean"}}},{"title":"Lens","properties":{"rust-analyzer.lens.references.trait.enable":{"markdownDescription":"Show `References` lens for Trait. Only applies when `#rust-analyzer.lens.enable#` is\nset.","default":false,"type":"boolean"}}},{"title":"Lens","properties":{"rust-analyzer.lens.run.enable":{"markdownDescription":"Show `Run` lens. Only applies when `#rust-analyzer.lens.enable#` is set.","default":true,"type":"boolean"}}},{"title":"Lens","properties":{"rust-analyzer.lens.updateTest.enable":{"markdownDescription":"Show `Update Test` lens. Only applies when `#rust-analyzer.lens.enable#` and\n`#rust-analyzer.lens.run.enable#` are set.","default":true,"type":"boolean"}}},{"title":"rust-analyzer","properties":{"rust-analyzer.linkedProjects":{"markdownDescription":"Disable project auto-discovery in favor of explicitly specified set of projects.\n\nElements must be paths pointing to `Cargo.toml`, `rust-project.json`, `.rs` files (which\nwill be treated as standalone files) or JSON objects in `rust-project.json` format.","default":[],"type":"array","items":{"type":["string","object"]}}}},{"title":"Lru","properties":{"rust-analyzer.lru.capacity":{"markdownDescription":"Number of syntax trees rust-analyzer keeps in memory. Defaults to 128.","default":null,"type":["null","integer"],"minimum":0,"maximum":65535}}},{"title":"Lru","properties":{"rust-analyzer.lru.query.capacities":{"markdownDescription":"The LRU capacity of the specified queries.","default":{},"type":"object"}}},{"title":"Notifications","properties":{"rust-analyzer.notifications.cargoTomlNotFound":{"markdownDescription":"Show `can't find Cargo.toml` error message.","default":true,"type":"boolean"}}},{"title":"rust-analyzer","properties":{"rust-analyzer.numThreads":{"markdownDescription":"The number of worker threads in the main loop. The default `null` means to pick\nautomatically.","default":null,"anyOf":[{"type":"null"},{"type":"number","minimum":0,"maximum":255},{"type":"string","enum":["physical","logical"],"enumDescriptions":["Use the number of physical cores","Use the number of logical cores"]}]}}},{"title":"Proc Macro","properties":{"rust-analyzer.procMacro.attributes.enable":{"markdownDescription":"Expand attribute macros. Requires `#rust-analyzer.procMacro.enable#` to be set.","default":true,"type":"boolean"}}},{"title":"Proc Macro","properties":{"rust-analyzer.procMacro.enable":{"markdownDescription":"Enable support for procedural macros, implies `#rust-analyzer.cargo.buildScripts.enable#`.","default":true,"type":"boolean"}}},{"title":"Proc Macro","properties":{"rust-analyzer.procMacro.ignored":{"markdownDescription":"These proc-macros will be ignored when trying to expand them.\n\nThis config takes a map of crate names with the exported proc-macro names to ignore as values.","default":{},"type":"object"}}},{"title":"Proc Macro","properties":{"rust-analyzer.procMacro.server":{"markdownDescription":"Internal config, path to proc-macro server executable.","default":null,"type":["null","string"]}}},{"title":"References","properties":{"rust-analyzer.references.excludeImports":{"markdownDescription":"Exclude imports from find-all-references.","default":false,"type":"boolean"}}},{"title":"References","properties":{"rust-analyzer.references.excludeTests":{"markdownDescription":"Exclude tests from find-all-references and call-hierarchy.","default":false,"type":"boolean"}}},{"title":"Runnables","properties":{"rust-analyzer.runnables.command":{"markdownDescription":"Command to be executed instead of 'cargo' for runnables.","default":null,"type":["null","string"]}}},{"title":"Runnables","properties":{"rust-analyzer.runnables.extraArgs":{"markdownDescription":"Additional arguments to be passed to cargo for runnables such as\ntests or binaries. For example, it may be `--release`.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"Runnables","properties":{"rust-analyzer.runnables.extraTestBinaryArgs":{"markdownDescription":"Additional arguments to be passed through Cargo to launched tests, benchmarks, or\ndoc-tests.\n\nUnless the launched target uses a\n[custom test harness](https://doc.rust-lang.org/cargo/reference/cargo-targets.html#the-harness-field),\nthey will end up being interpreted as options to\n[`rustc`’s built-in test harness (“libtest”)](https://doc.rust-lang.org/rustc/tests/index.html#cli-arguments).","default":["--show-output"],"type":"array","items":{"type":"string"}}}},{"title":"Rustc","properties":{"rust-analyzer.rustc.source":{"markdownDescription":"Path to the Cargo.toml of the rust compiler workspace, for usage in rustc_private\nprojects, or \"discover\" to try to automatically find it if the `rustc-dev` component\nis installed.\n\nAny project which uses rust-analyzer with the rustcPrivate\ncrates must set `[package.metadata.rust-analyzer] rustc_private=true` to use it.\n\nThis option does not take effect until rust-analyzer is restarted.","default":null,"type":["null","string"]}}},{"title":"Rustfmt","properties":{"rust-analyzer.rustfmt.extraArgs":{"markdownDescription":"Additional arguments to `rustfmt`.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"Rustfmt","properties":{"rust-analyzer.rustfmt.overrideCommand":{"markdownDescription":"Advanced option, fully override the command rust-analyzer uses for\nformatting. This should be the equivalent of `rustfmt` here, and\nnot that of `cargo fmt`. The file contents will be passed on the\nstandard input and the formatted result will be read from the\nstandard output.\n\nNote: The option must be specified as an array of command line arguments, with\nthe first argument being the name of the command to run.","default":null,"type":["null","array"],"items":{"type":"string"}}}},{"title":"Rustfmt","properties":{"rust-analyzer.rustfmt.rangeFormatting.enable":{"markdownDescription":"Enables the use of rustfmt's unstable range formatting command for the\n`textDocument/rangeFormatting` request. The rustfmt option is unstable and only\navailable on a nightly build.","default":false,"type":"boolean"}}},{"title":"Semantic Highlighting","properties":{"rust-analyzer.semanticHighlighting.doc.comment.inject.enable":{"markdownDescription":"Inject additional highlighting into doc comments.\n\nWhen enabled, rust-analyzer will highlight rust source in doc comments as well as intra\ndoc links.","default":true,"type":"boolean"}}},{"title":"Semantic Highlighting","properties":{"rust-analyzer.semanticHighlighting.nonStandardTokens":{"markdownDescription":"Emit non-standard tokens and modifiers\n\nWhen enabled, rust-analyzer will emit tokens and modifiers that are not part of the\nstandard set of semantic tokens.","default":true,"type":"boolean"}}},{"title":"Semantic Highlighting","properties":{"rust-analyzer.semanticHighlighting.operator.enable":{"markdownDescription":"Use semantic tokens for operators.\n\nWhen disabled, rust-analyzer will emit semantic tokens only for operator tokens when\nthey are tagged with modifiers.","default":true,"type":"boolean"}}},{"title":"Semantic Highlighting","properties":{"rust-analyzer.semanticHighlighting.operator.specialization.enable":{"markdownDescription":"Use specialized semantic tokens for operators.\n\nWhen enabled, rust-analyzer will emit special token types for operator tokens instead\nof the generic `operator` token type.","default":false,"type":"boolean"}}},{"title":"Semantic Highlighting","properties":{"rust-analyzer.semanticHighlighting.punctuation.enable":{"markdownDescription":"Use semantic tokens for punctuation.\n\nWhen disabled, rust-analyzer will emit semantic tokens only for punctuation tokens when\nthey are tagged with modifiers or have a special role.","default":false,"type":"boolean"}}},{"title":"Semantic Highlighting","properties":{"rust-analyzer.semanticHighlighting.punctuation.separate.macro.bang":{"markdownDescription":"When enabled, rust-analyzer will emit a punctuation semantic token for the `!` of macro\ncalls.","default":false,"type":"boolean"}}},{"title":"Semantic Highlighting","properties":{"rust-analyzer.semanticHighlighting.punctuation.specialization.enable":{"markdownDescription":"Use specialized semantic tokens for punctuation.\n\nWhen enabled, rust-analyzer will emit special token types for punctuation tokens instead\nof the generic `punctuation` token type.","default":false,"type":"boolean"}}},{"title":"Semantic Highlighting","properties":{"rust-analyzer.semanticHighlighting.strings.enable":{"markdownDescription":"Use semantic tokens for strings.\n\nIn some editors (e.g. vscode) semantic tokens override other highlighting grammars.\nBy disabling semantic tokens for strings, other grammars can be used to highlight\ntheir contents.","default":true,"type":"boolean"}}},{"title":"Signature Info","properties":{"rust-analyzer.signatureInfo.detail":{"markdownDescription":"Show full signature of the callable. Only shows parameters if disabled.","default":"full","type":"string","enum":["full","parameters"],"enumDescriptions":["Show the entire signature.","Show only the parameters."]}}},{"title":"Signature Info","properties":{"rust-analyzer.signatureInfo.documentation.enable":{"markdownDescription":"Show documentation.","default":true,"type":"boolean"}}},{"title":"Typing","properties":{"rust-analyzer.typing.triggerChars":{"markdownDescription":"Specify the characters allowed to invoke special on typing triggers.\n\n- typing `=` after `let` tries to smartly add `;` if `=` is followed by an existing\n    expression\n- typing `=` between two expressions adds `;` when in statement position\n- typing `=` to turn an assignment into an equality comparison removes `;` when in\n    expression position\n- typing `.` in a chain method call auto-indents\n- typing `{` or `(` in front of an expression inserts a closing `}` or `)` after the\n    expression\n- typing `{` in a use item adds a closing `}` in the right place\n- typing `>` to complete a return type `->` will insert a whitespace after it\n- typing `<` in a path or type position inserts a closing `>` after the path or type.","default":"=.","type":["null","string"]}}},{"title":"Vfs","properties":{"rust-analyzer.vfs.extraIncludes":{"markdownDescription":"Additional paths to include in the VFS. Generally for code that is\ngenerated or otherwise managed by a build system outside of Cargo,\nthough Cargo might be the eventual consumer.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"Workspace","properties":{"rust-analyzer.workspace.discoverConfig":{"markdownDescription":"Enables automatic discovery of projects using [`DiscoverWorkspaceConfig::command`].\n\n[`DiscoverWorkspaceConfig`] also requires setting `progress_label` and `files_to_watch`.\n`progress_label` is used for the title in progress indicators, whereas `files_to_watch`\nis used to determine which build system-specific files should be watched in order to\nreload rust-analyzer.\n\nBelow is an example of a valid configuration:\n```json\n\"rust-analyzer.workspace.discoverConfig\": {\n        \"command\": [\n                \"rust-project\",\n                \"develop-json\"\n        ],\n        \"progressLabel\": \"rust-analyzer\",\n        \"filesToWatch\": [\n                \"BUCK\"\n        ]\n}\n```\n\n## On `DiscoverWorkspaceConfig::command`\n\n**Warning**: This format is provisional and subject to change.\n\n[`DiscoverWorkspaceConfig::command`] *must* return a JSON object corresponding to\n`DiscoverProjectData::Finished`:\n\n```norun\n#[derive(Debug, Clone, Deserialize, Serialize)]\n#[serde(tag = \"kind\")]\n#[serde(rename_all = \"snake_case\")]\nenum DiscoverProjectData {\n        Finished { buildfile: Utf8PathBuf, project: ProjectJsonData },\n        Error { error: String, source: Option<String> },\n        Progress { message: String },\n}\n```\n\nAs JSON, `DiscoverProjectData::Finished` is:\n\n```json\n{\n        // the internally-tagged representation of the enum.\n        \"kind\": \"finished\",\n        // the file used by a non-Cargo build system to define\n        // a package or target.\n        \"buildfile\": \"rust-analyzer/BUILD\",\n        // the contents of a rust-project.json, elided for brevity\n        \"project\": {\n                \"sysroot\": \"foo\",\n                \"crates\": []\n        }\n}\n```\n\nIt is encouraged, but not required, to use the other variants on `DiscoverProjectData`\nto provide a more polished end-user experience.\n\n`DiscoverWorkspaceConfig::command` may *optionally* include an `{arg}`, which will be\nsubstituted with the JSON-serialized form of the following enum:\n\n```norun\n#[derive(PartialEq, Clone, Debug, Serialize)]\n#[serde(rename_all = \"camelCase\")]\npub enum DiscoverArgument {\n     Path(AbsPathBuf),\n     Buildfile(AbsPathBuf),\n}\n```\n\nThe JSON representation of `DiscoverArgument::Path` is:\n\n```json\n{\n        \"path\": \"src/main.rs\"\n}\n```\n\nSimilarly, the JSON representation of `DiscoverArgument::Buildfile` is:\n\n```json\n{\n        \"buildfile\": \"BUILD\"\n}\n```\n\n`DiscoverArgument::Path` is used to find and generate a `rust-project.json`, and\ntherefore, a workspace, whereas `DiscoverArgument::buildfile` is used to to update an\nexisting workspace. As a reference for implementors, buck2's `rust-project` will likely\nbe useful: https://github.com/facebook/buck2/tree/main/integrations/rust-project.","default":null,"anyOf":[{"type":"null"},{"type":"object","properties":{"command":{"type":"array","items":{"type":"string"}},"progressLabel":{"type":"string"},"filesToWatch":{"type":"array","items":{"type":"string"}}}}]}}},{"title":"Workspace","properties":{"rust-analyzer.workspace.symbol.search.excludeImports":{"markdownDescription":"Exclude all imports from workspace symbol search.\n\nIn addition to regular imports (which are always excluded),\nthis option removes public imports (better known as re-exports)\nand removes imports that rename the imported symbol.","default":false,"type":"boolean"}}},{"title":"Workspace","properties":{"rust-analyzer.workspace.symbol.search.kind":{"markdownDescription":"Workspace symbol search kind.","default":"only_types","type":"string","enum":["only_types","all_symbols"],"enumDescriptions":["Search for types only.","Search for all symbols kinds."]}}},{"title":"Workspace","properties":{"rust-analyzer.workspace.symbol.search.limit":{"markdownDescription":"Limits the number of items returned from a workspace symbol search (Defaults to 128).\nSome clients like vs-code issue new searches on result filtering and don't require all results to be returned in the initial search.\nOther clients requires all results upfront and might require a higher limit.","default":128,"type":"integer","minimum":0}}},{"title":"Workspace","properties":{"rust-analyzer.workspace.symbol.search.scope":{"markdownDescription":"Workspace symbol search scope.","default":"workspace","type":"string","enum":["workspace","workspace_and_dependencies"],"enumDescriptions":["Search in current workspace only.","Search in current workspace and dependencies."]}}},{}],"configurationDefaults":{"explorer.fileNesting.patterns":{"Cargo.toml":"Cargo.lock"}},"problemPatterns":[{"name":"rustc","patterns":[{"regexp":"^(warning|warn|error)(?:\\[(.*?)\\])?: (.*)$","severity":1,"code":2,"message":3},{"regexp":"^[\\s->=]*(.*?):([1-9]\\d*):([1-9]\\d*)\\s*$","file":1,"line":2,"column":3}]},{"name":"rustc-json","patterns":[{"regexp":"^.*\"message\":{\"message\":\"([^\"]*).*?\"file_name\":\"([^\"]+).*?\"line_start\":(\\d+).*?\"line_end\":(\\d+).*?\"column_start\":(\\d+).*?\"column_end\":(\\d+).*}$","message":1,"file":2,"line":3,"endLine":4,"column":5,"endColumn":6}]},{"name":"rust-panic","patterns":[{"regexp":"^thread '.*' panicked at (.*):(\\d*):(\\d*):$","file":1,"line":2,"column":3},{"regexp":"(.*)","message":1}]}],"languages":[{"id":"ra_syntax_tree","extensions":[".rast"]},{"id":"rust","extensions":[".rs"],"aliases":["Rust","rs"],"configuration":"language-configuration.json"}],"grammars":[{"language":"ra_syntax_tree","scopeName":"source.ra_syntax_tree","path":"ra_syntax_tree.tmGrammar.json"}],"problemMatchers":[{"name":"rustc","owner":"rustc","source":"rustc","fileLocation":["autoDetect","${workspaceRoot}"],"pattern":"$rustc"},{"name":"rustc-json","owner":"rustc","source":"rustc","fileLocation":["autoDetect","${workspaceRoot}"],"pattern":"$rustc-json"},{"name":"rust-panic","owner":"rust-panic","source":"panic","fileLocation":["autoDetect","${workspaceRoot}"],"pattern":"$rust-panic"},{"name":"rustc-watch","owner":"rustc","source":"rustc","fileLocation":["autoDetect","${workspaceRoot}"],"background":{"beginsPattern":"^\\[Running\\b","endsPattern":"^\\[Finished running\\b"},"pattern":"$rustc"}],"semanticTokenTypes":[{"id":"angle","description":"Style for < or >","superType":"punctuation"},{"id":"arithmetic","description":"Style for arithmetic operators","superType":"operator"},{"id":"attribute","description":"Style for attributes"},{"id":"attributeBracket","description":"Style for attribute invocation brackets, that is the `#[` and `]` tokens","superType":"punctuation"},{"id":"bitwise","description":"Style for bitwise operators","superType":"operator"},{"id":"boolean","description":"Style for boolean literals","superType":"keyword"},{"id":"brace","description":"Style for { or }","superType":"punctuation"},{"id":"bracket","description":"Style for [ or ]","superType":"punctuation"},{"id":"builtinAttribute","description":"Style for builtin attributes","superType":"attribute"},{"id":"builtinType","description":"Style for builtin types","superType":"type"},{"id":"character","description":"Style for character literals","superType":"string"},{"id":"colon","description":"Style for :","superType":"punctuation"},{"id":"comma","description":"Style for ,","superType":"punctuation"},{"id":"comparison","description":"Style for comparison operators","superType":"operator"},{"id":"constParameter","description":"Style for const generics"},{"id":"const","description":"Style for consts","superType":"variable"},{"id":"derive","description":"Style for derives","superType":"attribute"},{"id":"deriveHelper","description":"Style for derive helpers","superType":"attribute"},{"id":"dot","description":"Style for .","superType":"punctuation"},{"id":"escapeSequence","description":"Style for char or byte escapes in strings"},{"id":"formatSpecifier","description":"Style for {} placeholders in format strings"},{"id":"invalidEscapeSequence","description":"Style for invalid char or byte escapes in strings"},{"id":"label","description":"Style for labels"},{"id":"lifetime","description":"Style for lifetimes"},{"id":"logical","description":"Style for logic operators","superType":"operator"},{"id":"macroBang","description":"Style for the ! token of macro calls","superType":"punctuation"},{"id":"parenthesis","description":"Style for ( or )","superType":"punctuation"},{"id":"procMacro","description":"Style for proc macro code","superType":"macro"},{"id":"punctuation","description":"Style for generic punctuation"},{"id":"operator","description":"Style for operators","superType":"punctuation"},{"id":"selfKeyword","description":"Style for the self keyword","superType":"keyword"},{"id":"selfTypeKeyword","description":"Style for the self type keyword","superType":"keyword"},{"id":"semicolon","description":"Style for ;","superType":"punctuation"},{"id":"static","description":"Style for statics","superType":"variable"},{"id":"toolModule","description":"Style for tool module attributes","superType":"decorator"},{"id":"typeAlias","description":"Style for type aliases","superType":"type"},{"id":"union","description":"Style for C-style untagged unions","superType":"type"},{"id":"unresolvedReference","description":"Style for names which can not be resolved due to compilation errors"}],"semanticTokenModifiers":[{"id":"async","description":"Style for async functions and the `async` and `await` keywords"},{"id":"attribute","description":"Style for elements within attributes"},{"id":"callable","description":"Style for locals whose types implements one of the `Fn*` traits"},{"id":"constant","description":"Style for compile-time constants"},{"id":"consuming","description":"Style for locals that are being consumed when use in a function call"},{"id":"controlFlow","description":"Style for control-flow related tokens, this includes the `?` operator"},{"id":"crateRoot","description":"Style for names resolving to a crate root"},{"id":"injected","description":"Style for doc-string injected highlighting like rust source blocks in documentation"},{"id":"intraDocLink","description":"Style for intra doc links in doc-strings"},{"id":"library","description":"Style for items that are defined outside of the current crate"},{"id":"macro","description":"Style for tokens inside of macro calls"},{"id":"mutable","description":"Style for mutable locals and statics as well as functions taking `&mut self`"},{"id":"procMacro","description":"Style for tokens inside of proc-macro calls"},{"id":"public","description":"Style for items that are from the current crate and are `pub`"},{"id":"reference","description":"Style for locals behind a reference and functions taking `self` by reference"},{"id":"trait","description":"Style for associated trait items"},{"id":"unsafe","description":"Style for unsafe operations, like unsafe function calls, as well as the `unsafe` token"}],"semanticTokenScopes":[{"language":"rust","scopes":{"attribute":["meta.attribute.rust"],"boolean":["constant.language.boolean.rust"],"builtinType":["support.type.primitive.rust"],"constParameter":["constant.other.caps.rust"],"enum":["entity.name.type.enum.rust"],"formatSpecifier":["punctuation.section.embedded.rust"],"function":["entity.name.function.rust"],"interface":["entity.name.type.trait.rust"],"keyword":["keyword.other.rust"],"keyword.controlFlow":["keyword.control.rust"],"lifetime":["storage.modifier.lifetime.rust"],"macroBang":["entity.name.function.macro.rust"],"method":["entity.name.function.rust"],"struct":["entity.name.type.struct.rust"],"typeAlias":["entity.name.type.declaration.rust"],"union":["entity.name.type.union.rust"],"variable":["variable.other.rust"],"variable.constant":["variable.other.constant.rust"],"*.mutable":["markup.underline"]}}],"menus":{"commandPalette":[{"command":"rust-analyzer.viewHir","when":"inRustProject"},{"command":"rust-analyzer.viewFileText","when":"inRustProject"},{"command":"rust-analyzer.expandMacro","when":"inRustProject"},{"command":"rust-analyzer.matchingBrace","when":"inRustProject"},{"command":"rust-analyzer.parentModule","when":"inRustProject"},{"command":"rust-analyzer.childModules","when":"inRustProject"},{"command":"rust-analyzer.joinLines","when":"inRustProject"},{"command":"rust-analyzer.run","when":"inRustProject"},{"command":"rust-analyzer.debug","when":"inRustProject"},{"command":"rust-analyzer.newDebugConfig","when":"inRustProject"},{"command":"rust-analyzer.analyzerStatus","when":"inRustProject"},{"command":"rust-analyzer.memoryUsage","when":"inRustProject"},{"command":"rust-analyzer.reloadWorkspace","when":"inRustProject"},{"command":"rust-analyzer.restartServer","when":"inRustProject"},{"command":"rust-analyzer.onEnter","when":"inRustProject"},{"command":"rust-analyzer.ssr","when":"inRustProject"},{"command":"rust-analyzer.serverVersion","when":"inRustProject"},{"command":"rust-analyzer.openDocs","when":"inRustProject"},{"command":"rust-analyzer.openCargoToml","when":"inRustProject"},{"command":"rust-analyzer.viewMemoryLayout","when":"inRustProject"},{"command":"rust-analyzer.toggleLSPLogs","when":"inRustProject"},{"command":"rust-analyzer.openWalkthrough"},{"command":"rust-analyzer.syntaxTreeReveal","when":"false"},{"command":"rust-analyzer.syntaxTreeCopy","when":"false"},{"command":"rust-analyzer.syntaxTreeHideWhitespace","when":"false"},{"command":"rust-analyzer.syntaxTreeShowWhitespace","when":"false"}],"editor/context":[{"command":"rust-analyzer.peekTests","when":"inRustProject && editorTextFocus && editorLangId == rust","group":"navigation@1000"},{"command":"rust-analyzer.openDocs","when":"inRustProject && editorTextFocus && editorLangId == rust","group":"navigation@1001"}],"view/title":[{"command":"rust-analyzer.syntaxTreeHideWhitespace","group":"navigation","when":"view == rustSyntaxTree && !rustSyntaxTree.hideWhitespace"},{"command":"rust-analyzer.syntaxTreeShowWhitespace","group":"navigation","when":"view == rustSyntaxTree && rustSyntaxTree.hideWhitespace"}],"view/item/context":[{"command":"rust-analyzer.syntaxTreeCopy","group":"inline","when":"view == rustSyntaxTree"},{"command":"rust-analyzer.syntaxTreeReveal","group":"inline","when":"view == rustSyntaxTree"}]},"views":{"explorer":[{"icon":"$(package)","id":"rustDependencies","name":"Rust Dependencies","when":"inRustProject && config.rust-analyzer.showDependenciesExplorer"}],"rustSyntaxTreeContainer":[{"icon":"$(file-code)","id":"rustSyntaxTree","name":"Rust Syntax Tree","when":"inRustProject && config.rust-analyzer.showSyntaxTree"}]},"viewsContainers":{"activitybar":[{"id":"rustSyntaxTreeContainer","title":"Rust Syntax Tree","icon":"$(list-tree)"}]},"jsonValidation":[{"fileMatch":"rust-project.json","url":"https://json.schemastore.org/rust-project.json"},{"fileMatch":".rust-project.json","url":"https://json.schemastore.org/rust-project.json"}],"walkthroughs":[{"id":"landing","title":"Learn about rust-analyzer","description":"A brief introduction to get started with rust-analyzer. Learn about key features and resources to help you get the most out of the extension.","steps":[{"id":"setup","title":"Useful Setup Tips","description":"There are a couple of things you might want to configure upfront to your tastes. We'll name a few here but be sure to check out the docs linked below!\n\n**Marking library sources as readonly**\n\nAdding the snippet on the right to your settings.json will mark all Rust library sources as readonly.\n\n**Check on Save**\n\nBy default, rust-analyzer will run ``cargo check`` on your codebase when you save a file, rendering diagnostics emitted by ``cargo check`` within your code. This can potentially collide with other ``cargo`` commands running concurrently, blocking them from running for a certain amount of time. In these cases it is recommended to disable the ``rust-analyzer.checkOnSave`` configuration and running the ``rust-analyzer: Run flycheck`` command on-demand instead.","media":{"markdown":"./walkthrough-setup-tips.md"}},{"id":"docs","title":"Visit the docs!","description":"Confused about configurations? Want to learn more about rust-analyzer? Visit the [User Manual](https://rust-analyzer.github.io/book/)!","media":{"image":"./icon.png","altText":"rust-analyzer logo"},"completionEvents":["onLink:https://rust-analyzer.github.io/book/"]},{"id":"faq","title":"FAQ","description":"What are these code hints that are being inserted into my code?\n\nThese hints are called inlay hints which rust-analyzer support and are enabled by default in VSCode. If you wish to disable them you can do so via the ``editor.inlayHints.enabled`` setting.","media":{"image":"icon.png","altText":"rust-analyzer logo"}},{"id":"changelog","title":"Changelog","description":"Stay up-to-date with the latest changes in rust-analyzer. Check out the changelog [here](https://rust-analyzer.github.io/thisweek)!","media":{"image":"icon.png","altText":"rust-analyzer logo"},"completionEvents":["onLink:https://rust-analyzer.github.io/thisweek"]}]}]}},"location":{"$mid":1,"path":"/home/shiri/.vscode-oss/extensions/rust-lang.rust-analyzer-0.3.2593-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"rust-lang","metadata":{"installedTimestamp":1760377136248,"pinned":false,"source":"gallery","id":"06574cb4-e5dc-4631-8174-a543a4533621","publisherId":"cb14a7a7-a188-40bd-a953-e0a20757c5dd","publisherDisplayName":"rust-lang","targetPlatform":"linux-x64","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":50715452},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"vadimcn.vscode-lldb","uuid":"bee31e34-a44b-4a76-9ec2-e9fd1439a0f6"},"manifest":{"name":"vscode-lldb","displayName":"CodeLLDB","version":"1.11.6","publisher":"vadimcn","description":"A native debugger powered by LLDB.  Debug C++, Rust and other compiled languages.","license":"MIT","author":{"name":"vadimcn"},"icon":"images/lldb.png","categories":["Debuggers"],"keywords":["C++","Rust","Reverse","Embedded","Debugger"],"private":true,"repository":{"type":"git","url":"https://github.com/vadimcn/codelldb.git"},"bugs":{"url":"https://github.com/vadimcn/codelldb/issues"},"qna":"https://github.com/vadimcn/codelldb/discussions","engines":{"vscode":"^1.61.0"},"dependencies":{"jsonc-parser":"^3.3.1","string-argv":"^0.3.2","yaml":"^1.10.0"},"devDependencies":{"@types/vscode":"^1.60.0","@types/node":"^18.0.0","@types/mocha":"^10.0.0","@vscode/debugprotocol":"^1.53.0","@vscode/debugadapter-testsupport":"^1.51.0","@vscode/test-cli":"^0.0.11","@vscode/test-electron":"^2.5.2","@vscode/vsce":"^3.6.0","typescript":"^4.7.0","mocha":"^10.8.1","source-map-support":"^0.5.12","mocha-suppress-logs":"^0.3.1","webpack":"^5.37.1","webpack-cli":"^4.7.0","ts-loader":"^8.0.0","json-schema-to-typescript":"^15.0.4","json-schema-merge-allof":"^0.8.1","@apidevtools/json-schema-ref-parser":"^13.0.1"},"scripts":{"json2ts":"json2ts","vsce":"vsce","mocha":"mocha","tsc":"tsc","vscode-test":"vscode-test","webpack":"webpack"},"main":"extension.js","activationEvents":["onDebug","onUri","onStartupFinished"],"contributes":{"commands":[{"category":"LLDB","title":"Display Format...","command":"lldb.displayFormat"},{"category":"LLDB","title":"Show Disassembly...","command":"lldb.showDisassembly"},{"category":"LLDB","title":"Toggle Disassembly","command":"lldb.toggleDisassembly"},{"category":"LLDB","title":"Toggle Pointee Summaries","command":"lldb.toggleDerefPointers"},{"category":"LLDB","title":"Toggle Debug Console Mode","command":"lldb.toggleConsoleMode"},{"category":"LLDB","title":"Run Diagnostics","command":"lldb.diagnose"},{"category":"LLDB","title":"Generate Cargo Launch Configurations","command":"lldb.getCargoLaunchConfigs","enablement":"resourceFilename == 'Cargo.toml' && resourceScheme == file"},{"category":"LLDB","title":"Display Options...","command":"lldb.changeDisplaySettings"},{"category":"LLDB","title":"Copy Value","command":"lldb.modules.copyValue"},{"category":"LLDB","title":"Use Alternate Backend...","command":"lldb.alternateBackend"},{"category":"LLDB","title":"Attach to Process...","command":"lldb.attach"},{"category":"LLDB","title":"Command Prompt","command":"lldb.commandPrompt"},{"category":"LLDB","title":"Search Symbols...","command":"lldb.symbols","enablement":"debugType == 'lldb'"},{"category":"LLDB","title":"View Memory...","command":"lldb.viewMemory","enablement":"debugType == 'lldb'"},{"category":"LLDB","title":"Exclude Caller","command":"lldb.excludedCallers.add","enablement":"debugType == 'lldb' && focusedView == 'workbench.debug.callStackView'"},{"category":"LLDB","title":"Remove Caller Exclusion","command":"lldb.excludedCallers.remove","icon":"$(close)"},{"category":"LLDB","title":"Remove All Caller Exclusions","command":"lldb.excludedCallers.removeAll","icon":"$(clear-all)"}],"languages":[{"id":"lldb.disassembly","aliases":["Disassembly"],"extensions":[".disasm"]}],"grammars":[{"language":"lldb.disassembly","scopeName":"source.disassembly","path":"./syntaxes/disassembly.json"}],"views":{"debug":[{"id":"lldb.loadedModules","name":"Modules","when":"debugType == 'lldb'"},{"id":"lldb.excludedCallers","name":"Excluded Callers","when":"debugType == 'lldb'"}]},"menus":{"commandPalette":[{"command":"lldb.modules.copyValue","when":"viewItem == lldb.moduleProperty"}],"debug/callstack/context":[{"command":"lldb.excludedCallers.add","when":"debugType == 'lldb'"}],"view/title":[{"command":"lldb.excludedCallers.removeAll","when":"view == 'lldb.excludedCallers'","group":"navigation"}],"view/item/context":[{"command":"lldb.modules.copyValue","when":"viewItem == lldb.moduleProperty"},{"command":"lldb.excludedCallers.remove","when":"view == 'lldb.excludedCallers'","group":"inline"}],"explorer/context":[{"command":"lldb.getCargoLaunchConfigs","when":"resourceFilename == 'Cargo.toml'"}]},"problemMatchers":[{"name":"codelldb-rustc","owner":"rustc","source":"CodeLLDB","fileLocation":["autoDetect","${workspaceRoot}"],"pattern":[{"regexp":"^(warning|warn|error)(?:\\[(.*?)\\])?: (.*)$","severity":1,"code":2,"message":3},{"regexp":"^[\\s->=]*(.*?):([1-9]\\d*):([1-9]\\d*)\\s*$","file":1,"line":2,"column":3}]}],"configuration":[{"title":"General","properties":{"lldb.consoleMode":{"description":"Controls whether the debug console input is by default treated as debugger commands or as expressions to evaluate.","type":"string","enum":["commands","evaluate","split"],"default":"commands","enumDescriptions":["Treat debug console input as debugger commands.  In order to evaluate an expression, prefix it with '?' (question mark).","Treat debug console input as expressions.  In order to execute a debugger command, prefix it with '`' (backtick).","(experimental) Use the debug console for warningevaluation of expressions, open a separate terminal for input of LLDB commands."],"scope":"resource","order":1},"lldb.evaluationTimeout":{"description":"Timeout for expression evaluation, in seconds.","type":"number","default":5,"scope":"resource","order":2},"lldb.displayFormat":{"description":"Default format for displayed variable values.","type":"string","enum":["auto","hex","decimal","binary"],"default":"auto","scope":"resource","order":3},"lldb.dereferencePointers":{"description":"Whether to show summaries of the pointees instead of numeric values of the pointers themselves.","type":"boolean","default":true,"scope":"resource","order":4},"lldb.showDisassembly":{"description":"When to show disassembly.","type":"string","enum":["auto","never","always"],"default":"auto","enumDescriptions":["Only when source is not available.","Never show.","Always show, even if source is available."],"scope":"resource","order":5},"lldb.suppressMissingSourceFiles":{"description":"Suppress VSCode's messages about missing source files (when debug info refers to files not available on the local machine).","type":"boolean","default":true,"scope":"resource","order":10},"lldb.dbgconfig":{"description":"Common user-defined settings that can be inserted into launch configurations using ${dbgconfig:name} syntax.","type":"object","patternProperties":{".*":{"type":["string","number","array","boolean","null"]}},"default":{},"scope":"resource","order":100},"lldb.script":{"description":"Settings for scripts running within the debugger context. These may be accessed via `debugger.get_config()`. The schema is free-form, except that the `lang` subtree is reserved for built-in language support helpers.","type":"object","default":{},"scope":"resource","order":100}}},{"title":"Launch configuration defaults","properties":{"lldb.launch.initCommands":{"markdownDescription":"Commands executed *before* initCommands in individual launch configurations.","type":"array","items":{"type":"string"},"scope":"resource","order":1},"lldb.launch.preRunCommands":{"markdownDescription":"Commands executed *before* preRunCommands in individual launch configurations.","type":"array","items":{"type":"string"},"scope":"resource","order":2},"lldb.launch.postRunCommands":{"markdownDescription":"Commands executed *before* postRunCommands in individual launch configurations.","type":"array","items":{"type":"string"},"scope":"resource","order":3},"lldb.launch.preTerminateCommands":{"markdownDescription":"Commands executed *after* preTerminateCommands in individual launch configurations.","type":"array","items":{"type":"string"},"scope":"resource","order":4},"lldb.launch.exitCommands":{"markdownDescription":"Commands executed *after* exitCommands in individual launch configurations.","type":"array","items":{"type":"string"},"scope":"resource","order":4},"lldb.launch.env":{"description":"Additional environment variables merged with 'env' individual launch configurations.","type":"object","patternProperties":{".*":{"type":"string"}},"scope":"resource","order":10},"lldb.launch.envFile":{"type":"string","order":10},"lldb.launch.cwd":{"description":"Default program working directory.","type":"string","scope":"resource","order":10},"lldb.launch.terminal":{"description":"Default terminal type.","type":"string","enum":["integrated","external","console"],"enumDescriptions":["Use integrated terminal in VSCode.","Use external terminal window.","Use VScode Debug Console for stdout and stderr. Stdin will be unavailable."],"scope":"resource","order":10},"lldb.launch.stdio":{"description":"Default destination for stdio streams: null = send to debugger console or a terminal, \"<path>\" = attach to a file/tty/fifo.","type":["null","string","array","object"],"scope":"resource","order":10},"lldb.launch.expressions":{"description":"The default evaluator type used for expressions.","type":"string","enum":["simple","python","native"],"scope":"resource","order":10},"lldb.launch.sourceMap":{"description":"Additional entries that will be merged with 'sourceMap's of individual launch configurations.","type":"object","patternProperties":{".*":{"type":"string"}},"scope":"resource","order":10},"lldb.launch.breakpointMode":{"scope":"resource","order":10,"type":"string","enum":["path","file"]},"lldb.launch.sourceLanguages":{"description":"A list of source languages to enable language-specific features for.","type":"array","items":{"type":"string"},"scope":"resource","order":20},"lldb.launch.relativePathBase":{"description":"Default base directory used for resolution of relative source paths.  Defaults to \"${workspaceFolder}\".","type":"string","scope":"resource","order":100},"lldb.launch.debugServer":{"description":"Debug server port.","type":["null","integer"],"defaultSnippets":[{"label":"Port 4711","body":4711}],"scope":"resource","order":999}}},{"title":"Advanced","properties":{"lldb.verboseLogging":{"description":"Turns on verbose logging.","type":"boolean","default":false,"scope":"resource","order":1},"lldb.rpcServer":{"description":"Start an RPC server that will accept debug configuration requests.","type":["object","null"],"default":null,"defaultSnippets":[{"label":"Port 12345","body":{"host":"127.0.0.1","port":12345,"token":"secret"}}],"scope":"window","order":2},"lldb.library":{"markdownDescription":"Which LLDB library to use.\n\nThis can be either a file path (recommended) or a directory, in which case platform-specific heuristics will be used to locate the actual library file.","type":"string","scope":"resource","order":10},"lldb.cargo":{"markdownDescription":"Name of the command to invoke as Cargo.","type":"string","default":"cargo","scope":"resource","order":10},"lldb.adapterEnv":{"description":"Extra environment variables for the debug adapter.","type":"object","patternProperties":{".*":{"type":"string"}},"default":{},"scope":"resource","order":10},"lldb.evaluateForHovers":{"description":"Enable value preview when cursor is hovering over a variable.","type":"boolean","default":true,"scope":"resource","order":10},"lldb.commandCompletions":{"description":"Enable command completions in debug console.","type":"boolean","default":true,"scope":"resource","order":10},"lldb.useNativePDBReader":{"description":"Use the native reader for the PDB debug info format (Windows only)","type":"boolean","scope":"resource","order":10},"lldb.suppressUpdateNotifications":{"description":"Don't show extension update notifications.","type":"boolean","scope":"application","order":100}}}],"breakpoints":[{"language":"ada"},{"language":"arm"},{"language":"arm64"},{"language":"asm"},{"language":"c"},{"language":"c3"},{"language":"cpp"},{"language":"crystal"},{"language":"d"},{"language":"fortran"},{"language":"fortran-modern"},{"language":"haskell"},{"language":"jai"},{"language":"java"},{"language":"julia"},{"language":"kotlin"},{"language":"lldb.disassembly"},{"language":"nim"},{"language":"objective-c"},{"language":"objective-cpp"},{"language":"objectpascal"},{"language":"ocaml"},{"language":"odin"},{"language":"opencl"},{"language":"pascal"},{"language":"rust"},{"language":"swift"},{"language":"zig"}],"debuggers":[{"type":"lldb","label":"CodeLLDB","languages":["ada","arm","arm64","asm","c","c3","cpp","crystal","fortran-modern","fortran","jai","nim","objective-c","objective-cpp","objectpascal","odin","pascal","rust"],"variables":{"pickProcess":"lldb.pickProcess","pickMyProcess":"lldb.pickMyProcess"},"configurationAttributes":{"launch":{"anyOf":[{"required":["program"]},{"required":["targetCreateCommands"]},{"required":["cargo"]}],"type":"object","additionalProperties":false,"properties":{"args":{"description":"Program arguments","type":["array","null"],"items":{"type":"string"}},"breakpointMode":{"description":"Specifies how source breakpoints should be set","anyOf":[{"type":"string","enum":["path","file"]},{"type":"null"}]},"console":{"description":"Terminal type to use. (This setting is a compatibility alias of 'terminal'.)","anyOf":[{"oneOf":[{"description":"Use integrated terminal in VSCode.","type":"string","const":"integratedTerminal"},{"description":"Use external terminal window.","type":"string","const":"externalTerminal"},{"description":"Use VScode Debug Console for stdout and stderr. Stdin will be unavailable.","type":"string","const":"internalConsole"}]},{"type":"null"}]},"cwd":{"description":"Program working directory","type":["string","null"]},"env":{"description":"Additional environment variables","anyOf":[{"type":"object","additionalProperties":{"type":"string"}},{"type":"null"}]},"envFile":{"description":"File to read the environment variables from","type":["string","null"]},"exitCommands":{"description":"Commands executed at the end of debugging session","type":["array","null"],"items":{"type":"string"}},"expressions":{"description":"The default evaluator type used for expressions","anyOf":[{"type":"string","enum":["simple","python","native"]},{"type":"null"}]},"initCommands":{"description":"Initialization commands executed upon debugger startup","type":["array","null"],"items":{"type":"string"}},"name":{"type":["string","null"]},"noDebug":{"type":["boolean","null"]},"postRunCommands":{"description":"Commands executed just after the program has been launched","type":["array","null"],"items":{"type":"string"}},"preRunCommands":{"description":"Commands executed just before the program is launched","type":["array","null"],"items":{"type":"string"}},"preTerminateCommands":{"description":"Commands executed just before the debuggee is terminated or disconnected from","type":["array","null"],"items":{"type":"string"}},"processCreateCommands":{"description":"Commands that create the debuggee process","type":["array","null"],"items":{"type":"string"}},"program":{"description":"Path to the program to debug","type":["string","null"]},"relativePathBase":{"description":"Base directory used for resolution of relative source paths.  Defaults to \\\"${workspaceFolder}\\\".","type":["string","null"]},"reverseDebugging":{"description":"Enable reverse debugging (Requires reverse execution support in the debug server, see User's Manual for details).","type":["boolean","null"]},"sourceLanguages":{"description":"A list of source languages to enable language-specific features for","type":["array","null"],"items":{"type":"string"}},"sourceMap":{"description":"Source path remapping between the build machine and the local machine.  Each item is a pair of remote and local path prefixes.","anyOf":[{"type":"object","additionalProperties":{"type":["string","null"]}},{"type":"null"}]},"stdio":{"description":"Destination for stdio streams: null = send to the debugger console or the terminal, \"<path>\" = attach to a file/tty/fifo","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","items":{"type":["string","null"]}}]},{"type":"null"}]},"stopOnEntry":{"description":"Automatically stop debuggee after launch","type":["boolean","null"]},"targetCreateCommands":{"description":"Commands that create the debug target","type":["array","null"],"items":{"type":"string"}},"terminal":{"description":"Terminal type to use","anyOf":[{"anyOf":[{"description":"Use integrated terminal in VSCode.","type":"string","const":"integrated"},{"description":"Use external terminal window.","type":"string","const":"external"},{"description":"Use VScode Debug Console for stdout and stderr. Stdin will be unavailable.","type":"string","const":"console"},{"description":"Use the specified TTY device","anyOf":[{"description":"TTY device name (Unix)","type":"string"},{"description":"Process ID (Windows)","type":"integer","format":"uint64","minimum":0}]}]},{"type":"null"}]},"cargo":{"description":"Cargo invocation parameters.","anyOf":[{"type":"array","items":{"type":"string"},"description":"List of cargo arguments."},{"type":"object","properties":{"args":{"description":"List of cargo arguments.","type":"array","default":[]},"env":{"description":"Additional environment variables passed to Cargo.","type":"object","default":{},"additionalProperties":{"type":"string"}},"cwd":{"description":"Cargo working directory.","type":"string"},"problemMatcher":{"description":"Problem matcher(s) to apply to Cargo output.","type":["string","array"]},"filter":{"description":"Filter applied to compilation artifacts.","type":"object","properties":{"name":{"type":"string"},"kind":{"type":"string"}}}},"required":["args"],"additionalProperties":false}]}}},"attach":{"type":"object","additionalProperties":false,"properties":{"breakpointMode":{"description":"Specifies how source breakpoints should be set","anyOf":[{"type":"string","enum":["path","file"]},{"type":"null"}]},"exitCommands":{"description":"Commands executed at the end of debugging session","type":["array","null"],"items":{"type":"string"}},"expressions":{"description":"The default evaluator type used for expressions","anyOf":[{"type":"string","enum":["simple","python","native"]},{"type":"null"}]},"initCommands":{"description":"Initialization commands executed upon debugger startup","type":["array","null"],"items":{"type":"string"}},"name":{"type":["string","null"]},"pid":{"description":"Process id to attach to","anyOf":[{"anyOf":[{"type":"integer","format":"uint64","minimum":0},{"type":"string"}]},{"type":"null"}]},"postRunCommands":{"description":"Commands executed just after the program has been launched","type":["array","null"],"items":{"type":"string"}},"preRunCommands":{"description":"Commands executed just before the program is launched","type":["array","null"],"items":{"type":"string"}},"preTerminateCommands":{"description":"Commands executed just before the debuggee is terminated or disconnected from","type":["array","null"],"items":{"type":"string"}},"processCreateCommands":{"description":"Commands that create the debuggee process","type":["array","null"],"items":{"type":"string"}},"program":{"description":"Path to the program to attach to","type":["string","null"]},"relativePathBase":{"description":"Base directory used for resolution of relative source paths.  Defaults to \\\"${workspaceFolder}\\\".","type":["string","null"]},"reverseDebugging":{"description":"Enable reverse debugging (Requires reverse execution support in the debug server, see User's Manual for details).","type":["boolean","null"]},"sourceLanguages":{"description":"A list of source languages to enable language-specific features for","type":["array","null"],"items":{"type":"string"}},"sourceMap":{"description":"Source path remapping between the build machine and the local machine.  Each item is a pair of remote and local path prefixes.","anyOf":[{"type":"object","additionalProperties":{"type":["string","null"]}},{"type":"null"}]},"stopOnEntry":{"description":"Automatically stop debuggee after attach","type":["boolean","null"]},"targetCreateCommands":{"description":"Commands that create the debug target","type":["array","null"],"items":{"type":"string"}},"waitFor":{"description":"Wait for the process to launch (MacOS only","type":["boolean","null"]}}}},"configurationSnippets":[{"label":"CodeLLDB: Launch","description":"Launch a program.","body":{"type":"lldb","request":"launch","name":"${2:Launch}","program":"^\"\\${workspaceFolder}/${1:<program>}\"","args":[],"cwd":"^\"\\${workspaceFolder}\""}},{"label":"CodeLLDB: Attach to Process","description":"Attach to a running process by process id.","sortText":"AAAA","body":{"type":"lldb","request":"attach","name":"${2:Attach}","pid":"^\"\\${command:pickMyProcess}\" // use \\${command:pickProcess} to pick other users' processes"}},{"label":"CodeLLDB: Launch Custom","description":"Launch or attach using raw LLDB commands.","body":{"type":"lldb","request":"launch","name":"${2:Custom launch}","targetCreateCommands":["^\"target create \\${workspaceFolder}/${1:<program>}\""],"processCreateCommands":["settings set target.run-args ${3:value1 value2 value3}","process launch"]}}]}]},"config":{"platformPackages":{"url":"https://github.com/vadimcn/codelldb/releases/download/v${version}/${platformPackage}","platforms":{"linux-x64":"codelldb-linux-x64.vsix","linux-arm64":"codelldb-linux-arm64.vsix","linux-arm":"codelldb-linux-armhf.vsix","darwin-x64":"codelldb-darwin-x64.vsix","darwin-arm64":"codelldb-darwin-arm64.vsix","win32-x64":"codelldb-win32-x64.vsix","win32-ia32":"codelldb-win32-x64.vsix"}}}},"location":{"$mid":1,"path":"/home/shiri/.vscode-oss/extensions/vadimcn.vscode-lldb-1.11.6","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"vadimcn","metadata":{"isApplicationScoped":false,"isMachineScoped":false,"isBuiltin":false,"installedTimestamp":1760377264725,"pinned":true,"source":"vsix","id":"bee31e34-a44b-4a76-9ec2-e9fd1439a0f6","publisherDisplayName":"vadimcn","publisherId":"3b05d186-6311-4caa-99b5-09032a9d3cf5","isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":187474843},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"tamasfe.even-better-toml","uuid":"b2215d5f-675e-4a2b-b6ac-1ca737518b78"},"manifest":{"name":"even-better-toml","displayName":"Even Better TOML","description":"Fully-featured TOML support","version":"0.21.2","autoTag":{"enabled":true},"repository":{"url":"https://github.com/tamasfe/taplo"},"bugs":{"url":"https://github.com/tamasfe/taplo/issues"},"publisher":"tamasfe","author":{"name":"tamasfe"},"preview":true,"icon":"taplo-icon.png","galleryBanner":{"color":"#731c12","theme":"dark"},"license":"SEE LICENSE IN LICENSE.md","engines":{"vscode":"^1.90.0"},"categories":["Programming Languages","Linters","Formatters","Other"],"activationEvents":["onLanguage:cargoLock"],"keywords":["toml","syntax","rust","formatter","config"],"extensionKind":["workspace"],"contributes":{"grammars":[{"language":"toml","scopeName":"source.toml","path":"./toml.tmLanguage.json"},{"scopeName":"markdown.toml.frontmatter.codeblock","path":"./toml.frontmatter.tmLanguage.json","injectTo":["text.html.markdown"]},{"scopeName":"markdown.toml.codeblock","path":"./toml.markdown.tmLanguage.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.block.toml":"toml"}}],"languages":[{"id":"toml","aliases":["TOML"],"extensions":[".toml"],"filenames":["Cargo.lock","uv.lock"],"configuration":"./language-configuration.json"}],"menus":{"commandPalette":[{"command":"evenBetterToml.selectSchema","when":"editorLangId == toml"},{"command":"evenBetterToml.copyAsJson"},{"command":"evenBetterToml.copyAsToml"},{"command":"evenBetterToml.pasteAsJson"},{"command":"evenBetterToml.pasteAsToml"}]},"commands":[{"command":"evenBetterToml.selectSchema","title":"TOML: Select Schema"},{"command":"evenBetterToml.copyAsJson","title":"TOML: Copy as JSON","enablement":"editorHasSelection"},{"command":"evenBetterToml.copyAsToml","title":"TOML: Copy as TOML","enablement":"editorHasSelection"},{"command":"evenBetterToml.pasteAsJson","title":"TOML: Paste as JSON"},{"command":"evenBetterToml.pasteAsToml","title":"TOML: Paste as TOML"}],"semanticTokenTypes":[{"id":"tomlArrayKey","superType":"variable","description":"Keys of regular arrays."},{"id":"tomlTableKey","superType":"variable","description":"Keys of inline tables."}],"semanticTokenScopes":[{"scopes":{"tomlArrayKey":["support.type.property-name.array.toml"],"tomlTableKey":["support.type.property-name.table.toml"]}}],"configuration":{"title":"Even Better TOML","properties":{"evenBetterToml.taplo.bundled":{"description":"Use the bundled taplo language server. If set to `false`, the `taplo` executable must be found in PATH or must be set in `evenBetterToml.taplo.path`.","type":"boolean","scope":"resource","default":true},"evenBetterToml.taplo.path":{"description":"An absolute path to the `taplo` executable. `evenBetterToml.taplo.bundled` needs to be set to `false` for this to have any effect.","type":["string","null"],"scope":"resource","default":null},"evenBetterToml.taplo.environment":{"type":["object"],"scope":"resource","description":"Environment variables for Taplo.","additionalProperties":{"type":"string"},"default":{}},"evenBetterToml.taplo.extraArgs":{"type":["array","null"],"scope":"resource","description":"Additional arguments for Taplo. Has no effect for the bundled LSP.","items":{"type":"string"},"default":[]},"evenBetterToml.taplo.configFile.path":{"description":"An absolute, or workspace relative path to the Taplo configuration file.","type":"string","default":null,"scope":"resource"},"evenBetterToml.taplo.configFile.enabled":{"description":"Whether to enable the usage of a Taplo configuration file.","type":"boolean","scope":"resource","default":true},"evenBetterToml.semanticTokens":{"description":"Enable semantic tokens for inline table and array keys.","type":"boolean","scope":"resource","default":false},"evenBetterToml.schema.enabled":{"description":"Enable completion and validation based on JSON schemas.","type":"boolean","scope":"resource","default":true},"evenBetterToml.schema.links":{"description":"Whether to show clickable links for keys in the editor.","type":"boolean","scope":"resource","default":false},"evenBetterToml.schema.catalogs":{"description":"A list of URLs to schema catalogs where schemas and associations can be fetched from","type":"array","scope":"resource","items":{"type":"string"},"default":["https://www.schemastore.org/api/json/catalog.json"]},"evenBetterToml.schema.associations":{"description":"Document and schema associations.","markdownDescription":"Additional document and schema associations. \n\n The key must be a regular expression, this pattern is used to associate schemas with absolute document URIs. Overlapping patterns result in undefined behaviour and either matching schema can be used. \n\n The value must be an absolute URI to the JSON schema, for supported values and more information [read here](https://taplo.tamasfe.dev/configuration#visual-studio-code).","type":"object","scope":"resource","default":{}},"evenBetterToml.schema.cache.memoryExpiration":{"description":"The amount of seconds after which schemas will be invalidated from memory.","markdownDescription":"The amount of seconds after which schemas will be invalidated from memory. \n**NOTE**: setting too low values will cause performance issues and validation of some schemas will fail.","type":"integer","scope":"resource","minimum":0,"default":60},"evenBetterToml.schema.cache.diskExpiration":{"description":"The amount of seconds after which cached catalogs and schemas expire and will be attempted to be fetched again.","type":"integer","scope":"resource","minimum":0,"default":600},"evenBetterToml.completion.maxKeys":{"description":"The maximum amount of keys in a dotted key to display during completion, 0 effectively disables key completions.","type":"integer","scope":"resource","minimum":0,"default":5},"evenBetterToml.syntax.semanticTokens":{"description":"Whether to enable semantic tokens for tables and arrays.","type":"boolean","scope":"resource","default":true},"evenBetterToml.formatter.alignEntries":{"scope":"resource","type":"boolean","default":null,"description":"Align entries vertically. Entries that have table headers, comments, or blank lines between them are not aligned."},"evenBetterToml.formatter.alignComments":{"scope":"resource","type":"boolean","default":null,"description":"Align consecutive comments after entries and items vertically. This applies to comments that are after entries or array items"},"evenBetterToml.formatter.arrayTrailingComma":{"scope":"resource","type":"boolean","default":null,"description":"Put trailing commas for multiline arrays."},"evenBetterToml.formatter.arrayAutoExpand":{"scope":"resource","type":"boolean","default":null,"description":"Automatically expand arrays to multiple lines."},"evenBetterToml.formatter.inlineTableExpand":{"scope":"resource","type":"boolean","default":null,"description":"Expand values inside in line tables."},"evenBetterToml.formatter.arrayAutoCollapse":{"scope":"resource","type":"boolean","default":null,"description":"Automatically collapse arrays if they fit in one line."},"evenBetterToml.formatter.compactArrays":{"scope":"resource","type":"boolean","default":null,"description":"Omit whitespace padding inside single-line arrays."},"evenBetterToml.formatter.compactInlineTables":{"scope":"resource","type":"boolean","default":null,"description":"Omit whitespace padding inside inline tables."},"evenBetterToml.formatter.compactEntries":{"scope":"resource","type":"boolean","default":null,"description":"Omit whitespace around `=`."},"evenBetterToml.formatter.columnWidth":{"scope":"resource","type":"number","default":null,"description":"Target maximum column width after which arrays are expanded into new lines."},"evenBetterToml.formatter.indentTables":{"scope":"resource","type":"boolean","default":null,"description":"Indent subtables if they come in order."},"evenBetterToml.formatter.indentEntries":{"scope":"resource","type":"boolean","default":null,"description":"Indent entries under tables."},"evenBetterToml.formatter.indentString":{"scope":"resource","type":"string","default":null,"description":"Indentation to use, should be tabs or spaces but technically could be anything."},"evenBetterToml.formatter.trailingNewline":{"scope":"resource","type":"boolean","default":null,"description":"Add trailing newline to the source."},"evenBetterToml.formatter.reorderKeys":{"scope":"resource","type":"boolean","default":null,"description":"Alphabetically reorder keys that are not separated by blank lines."},"evenBetterToml.formatter.reorderArrays":{"scope":"resource","type":"boolean","default":null,"description":"Alphabetically reorder array values that are not separated by blank lines."},"evenBetterToml.formatter.reorderInlineTables":{"scope":"resource","type":"boolean","default":null,"description":"Alphabetically reorder inline tables."},"evenBetterToml.formatter.allowedBlankLines":{"scope":"resource","type":"number","default":null,"description":"The maximum amount of consecutive blank lines allowed."},"evenBetterToml.formatter.crlf":{"scope":"resource","type":"boolean","default":null,"description":"Use CRLF line endings."},"evenBetterToml.rules":{"scope":"resource","type":"array","default":[],"markdownDescription":"Array of Taplo rules in JSON format, see [Configuration File - Rules](https://taplo.tamasfe.dev/configuration/file.html#rules). The rules given here are appended to existing rules from config files, if any. There is no conversion done, all object keys must be snake_case, including formatting rules."}}}},"main":"./dist/extension.js","browser":"./dist/browser-extension.js","scripts":{"vscode:prepublish":"yarn build","open-in-browser":"vscode-test-web --extensionDevelopmentPath=. .","build:syntax":"ts-node --project node.tsconfig.json src/syntax/index.ts","build:browser-extension":"rollup -c rollup.config.browser-extension.mjs","build:browser-server":"rollup -c rollup.config.browser-server.mjs","build:node":"rollup -c rollup.config.mjs","build":"node scripts/build.mjs"},"dependencies":{"@taplo/lsp":"^0.8.0","deep-equal":"^2.2.3","encoding":"^0.1.13","fast-glob":"^3.3.2","node-fetch":"^3.3.2","vscode-languageclient":"^9.0.1","which":"^5.0.0"},"devDependencies":{"@rollup/plugin-commonjs":"^25.0.7","@rollup/plugin-node-resolve":"^15.2.3","@rollup/plugin-replace":"^5.0.5","@types/deep-equal":"^1.0.4","@types/node":"^20.11.9","@types/vscode":"^1.90.0","@types/which":"^3.0.3","@vscode/test-web":"^0.0.51","esbuild":"^0.20.0","rollup":"^4.9.6","rollup-plugin-esbuild":"^6.1.1","ts-node":"^10.9.2","typescript":"^5.3.3"},"packageManager":"yarn@4.0.2"},"location":{"$mid":1,"path":"/home/shiri/.vscode-oss/extensions/tamasfe.even-better-toml-0.21.2-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"tamasfe","metadata":{"installedTimestamp":1760377741957,"pinned":false,"source":"gallery","id":"b2215d5f-675e-4a2b-b6ac-1ca737518b78","publisherId":"78c2102e-13a2-49ea-ac79-8d1bbacbbf0e","publisherDisplayName":"tamasfe","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":72274201},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"fill-labs.dependi","uuid":"456278dd-7f50-4cbe-8314-ab06540c1057"},"manifest":{"name":"dependi","displayName":"Dependi","description":"Empowers developers to efficiently manage dependencies and address vulnerabilities in Rust, Go, JavaScript, Typescript, PHP and Python projects.","version":"0.7.15","publisher":"fill-labs","author":{"name":"Fill Labs","email":"info@dependi.io"},"license":"SEE LICENSE IN LICENSE","bugs":{"url":"https://github.com/filllabs/dependi/issues","email":"info@dependi.io"},"homepage":"https://github.com/filllabs/dependi/blob/master/README.md","engines":{"vscode":"^1.87.0"},"repository":{"type":"git","url":"https://github.com/filllabs/dependi.git"},"icon":"icon.png","keywords":["rust","python","go","golang","node","js","javascript","ts","typescript","crates","pypi","pip","npm","php","packagist","composer","cargo","package","dependi","requirements","go.mod","dependency","version","vulnerability","security","update","toml"],"categories":["Programming Languages","Visualization","Other"],"pricing":"Free","activationEvents":["onLanguage:toml","workspaceContains:**/Cargo.toml","onLanguage:go.mod","workspaceContains:**/go.mod","onLanguage:package.json","workspaceContains:**/package.json","onLanguage:composer.json","workspaceContains:**/composer.json","onLanguage:requirements.txt","workspaceContains:**/requirements.txt","onLanguage:requirements.in","workspaceContains:**/requirements.in","onLanguage:pixi.toml","workspaceContains:**/pixi.toml","onLanguage:pyproject.toml","workspaceContains:**/pyproject.toml"],"contributes":{"menus":{"editor/title":[{"when":"dependi.hasLockFile && resourceFilename != 'go.mod' && !(resourceFilename =~ /^requirement/) ","command":"dependi.commands.lockFileParsed","group":"navigation@103"},{"when":"!dependi.hasLockFile && dependi.isLockFileEnabled && resourceFilename in dependi.supportedFiles && resourceFilename != 'go.mod' && !(resourceFilename =~ /^requirement/)","command":"dependi.commands.disableLockFileParsing","group":"navigation@103"},{"when":"!dependi.hasLockFile && !dependi.isLockFileEnabled && resourceFilename in dependi.supportedFiles && resourceFilename != 'go.mod' && !(resourceFilename =~ /^requirement/)","command":"dependi.commands.enableLockFileParsing","group":"navigation@103"},{"when":"resourceFilename in dependi.supportedFiles","command":"dependi.commands.vulnerability.report","group":"navigation@104"},{"when":"resourceFilename in dependi.supportedFiles","command":"dependi.commands.vulnerability.currentReport","group":"navigation@104"},{"when":"resourceFilename in dependi.supportedFiles","command":"dependi.commands.updateAll","group":"navigation@102"},{"when":"resourceFilename in dependi.supportedFiles","command":"dependi.commands.retry","group":"navigation@101"}]},"commands":[{"command":"dependi.commands.replaceVersion","title":"Do not call manually ! Replace Version of the provided dependency","category":"Dependi"},{"command":"dependi.commands.retry","title":"Retry to fetch dependencies","category":"Dependi","icon":{"dark":"./icons/retry-dark.svg","light":"./icons/retry-light.svg"}},{"command":"dependi.commands.updateAll","title":"Update All dependencies to latest version","category":"Dependi","icon":{"dark":"./icons/update-dark.svg","light":"./icons/update-light.svg"}},{"command":"dependi.commands.vulnerability.report","title":"Generate vulnerability report compared to latest dependency commit","category":"Dependi","icon":{"dark":"./icons/vuln-rep-comp-dark.svg","light":"./icons/vuln-rep-comp-light.svg"}},{"command":"dependi.commands.vulnerability.currentReport","title":"Generate vulnerability report the current dependencies","category":"Dependi","icon":{"dark":"./icons/vuln-rep-dark.svg","light":"./icons/vuln-rep-light.svg"}},{"command":"dependi.commands.enableLockFileParsing","title":"Enable Lock File Parsing","category":"Dependi","icon":"$(unlock)"},{"command":"dependi.commands.disableLockFileParsing","title":"Disable Lock File Parsing","category":"Dependi","icon":"$(lock)"},{"command":"dependi.commands.lockFileParsed","title":"Disable Lock File Parsing","category":"Dependi","icon":{"dark":"./icons/lock-doc-dark.svg","light":"./icons/lock-doc-light.svg"}}],"configuration":[{"title":"Dependi API Settings","properties":{"dependi.apiURL":{"type":"string","scope":"resource","description":"The API URL for the index server.","format":"url","pattern":"^https?://(?!.*//)([^/]+/)*[^/]+$","default":"https://index.dependi.io","order":1},"dependi.apiKey":{"type":"string","scope":"resource","default":"","description":"API key for accessing enhanced features.","order":2}}},{"title":"Rust Settings","properties":{"dependi.rust.enabled":{"type":"boolean","scope":"resource","default":true,"description":"Enable checking for Rust dependencies.","order":4},"dependi.rust.indexServerURL":{"type":"string","scope":"resource","description":"The URL for the Rust package index server.","format":"url","pattern":"^https?://(?!.*//)([^/]+/)*[^/]+$","default":"https://index.crates.io","order":5},"dependi.rust.unstableFilter":{"type":"string","enum":["Exclude","IncludeAlways","IncludeIfUnstable"],"default":"Exclude","scope":"resource","enumDescriptions":["Exclude them (default)","Include them and always consider as latest","Include if the current version is already unstable"],"description":"Filter unstable versions: Exclude, Include Always, or Include If Unstable.","order":6},"dependi.rust.ignoreLinePatterns":{"type":"string","scope":"resource","default":"","markdownDescription":"Matches lines based on `*` position: `text*`, `*text`, `*text*`. Multiple patterns can be used, separated by commas.","order":7},"dependi.rust.informPatchUpdates":{"type":"boolean","scope":"resource","default":false,"description":"Inform about available patch updates for Rust packages via decoration.","order":8},"dependi.rust.lockFileEnabled":{"type":"boolean","scope":"resource","default":true,"description":"Enable checking for Rust dependencies in lockfiles.","order":9},"dependi.rust.silenceVersionOverflows":{"type":"boolean","scope":"resource","default":false,"description":"Consider non-registry packages as up-to-date if their version exceeds the max.","order":10}}},{"title":"JavaScript/TypeScript Settings","properties":{"dependi.npm.enabled":{"type":"boolean","scope":"resource","default":true,"description":"Enable checking for Npm dependencies.","order":11},"dependi.npm.indexServerURL":{"type":"string","scope":"resource","description":"The URL for the NPM package index server.","format":"url","default":"https://registry.npmjs.org","pattern":"^https?://(?!.*//)([^/]+/)*[^/]+$","order":12},"dependi.npm.unstableFilter":{"type":"string","enum":["Exclude","IncludeAlways","IncludeIfUnstable"],"default":"Exclude","scope":"resource","enumDescriptions":["Exclude them (default)","Include them and always consider as latest","Include if the current version is already unstable"],"description":"Filter unstable versions: Exclude, Include Always, or Include If Unstable.","order":13},"dependi.npm.ignoreLinePatterns":{"type":"string","scope":"resource","default":"","order":14,"markdownDescription":"Matches lines based on `*` position: `text*`, `*text`, `*text*`. Multiple patterns can be used, separated by commas."},"dependi.npm.informPatchUpdates":{"type":"boolean","scope":"resource","default":false,"description":"Inform about available patch updates for NPM packages via decoration.","order":15},"dependi.npm.lockFileEnabled":{"type":"boolean","scope":"resource","default":true,"description":"Enable checking for Npm dependencies in lockfiles.","order":16},"dependi.npm.silenceVersionOverflows":{"type":"boolean","scope":"resource","default":false,"description":"Consider non-registry packages as up-to-date if their version exceeds the max.","order":17}}},{"title":"Go Settings","properties":{"dependi.go.enabled":{"type":"boolean","scope":"resource","default":true,"description":"Enable checking for Go dependencies.","order":18},"dependi.go.indexServerURL":{"type":"string","scope":"resource","description":"The URL for the Go package index server.","format":"url","pattern":"^https?://(?!.*//)([^/]+/)*[^/]+$","default":"https://proxy.golang.org","order":19},"dependi.go.unstableFilter":{"type":"string","enum":["Exclude","IncludeAlways","IncludeIfUnstable"],"default":"Exclude","scope":"resource","enumDescriptions":["Exclude them (default)","Include them and always consider as latest","Include if the current version is already unstable"],"description":"Filter unstable versions: Exclude, Include Always, or Include If Unstable.","order":20},"dependi.go.ignoreLinePatterns":{"type":"string","scope":"resource","default":"","markdownDescription":"Matches lines based on `*` position: `text*`, `*text`, `*text*`. Multiple patterns can be used, separated by commas.","order":21},"dependi.go.informPatchUpdates":{"type":"boolean","scope":"resource","default":false,"description":"Inform about available patch updates for Go packages via decoration.","order":22},"dependi.go.silenceVersionOverflows":{"type":"boolean","scope":"resource","default":false,"description":"Consider non-registry packages as up-to-date if their version exceeds the max.","order":23}}},{"title":"Python Settings","properties":{"dependi.python.enabled":{"type":"boolean","scope":"resource","default":true,"description":"Enable checking for Python dependencies.","order":24},"dependi.python.indexServerURL":{"type":"string","scope":"resource","description":"The URL for the Python package index server.","format":"url","pattern":"^https?://(?!.*//)([^/]+/)*[^/]+$","default":"https://pypi.org/pypi","order":25},"dependi.python.unstableFilter":{"type":"string","enum":["Exclude","IncludeAlways","IncludeIfUnstable"],"default":"Exclude","scope":"resource","enumDescriptions":["Exclude them (default)","Include them and always consider as latest","Include if the current version is already unstable"],"description":"Filter unstable versions: Exclude, Include Always, or Include If Unstable.","order":26},"dependi.python.ignoreLinePatterns":{"type":"string","scope":"resource","default":"","markdownDescription":"Matches lines based on `*` position: `text*`, `*text`, `*text*`. Multiple patterns can be used, separated by commas.","order":27},"dependi.python.informPatchUpdates":{"type":"boolean","scope":"resource","default":false,"description":"Inform about available patch updates for Python packages via decoration.","order":28},"dependi.python.lockFileEnabled":{"type":"boolean","scope":"resource","default":true,"description":"Enable checking for Python dependencies in lockfiles.","order":29},"dependi.python.silenceVersionOverflows":{"type":"boolean","scope":"resource","default":false,"description":"Consider non-registry packages as up-to-date if their version exceeds the max.","order":30}}},{"title":"PHP Settings","properties":{"dependi.php.enabled":{"type":"boolean","scope":"resource","default":true,"description":"Enable checking for PHP dependencies.","order":31},"dependi.php.indexServerURL":{"type":"string","scope":"resource","description":"The URL for the PHP package index server.","format":"url","pattern":"^https?://(?!.*//)([^/]+/)*[^/]+$","default":"https://repo.packagist.org","order":32},"dependi.php.unstableFilter":{"type":"string","enum":["Exclude","IncludeAlways","IncludeIfUnstable"],"default":"Exclude","scope":"resource","enumDescriptions":["Exclude them (default)","Include them and always consider as latest","Include if the current version is already unstable"],"description":"Filter unstable versions: Exclude, Include Always, or Include If Unstable.","order":33},"dependi.php.ignoreLinePatterns":{"type":"string","scope":"resource","default":"","markdownDescription":"Matches lines based on `*` position: `text*`, `*text`, `*text*`. Multiple patterns can be used, separated by commas.","order":34},"dependi.php.informPatchUpdates":{"type":"boolean","scope":"resource","default":false,"description":"Inform about available patch updates for PHP packages via decoration.","order":35},"dependi.php.lockFileEnabled":{"type":"boolean","scope":"resource","default":true,"description":"Enable checking for PHP dependencies in lockfiles.","order":36},"dependi.php.silenceVersionOverflows":{"type":"boolean","scope":"resource","default":false,"description":"Consider non-registry packages as up-to-date if their version exceeds the max.","order":37}}},{"title":"Dart Settings","properties":{"dependi.dart.enabled":{"type":"boolean","scope":"resource","default":true,"description":"Enable checking for Dart dependencies.","order":38},"dependi.dart.indexServerURL":{"type":"string","scope":"resource","description":"The URL for the Dart package index server.","format":"url","pattern":"^https?://(?!.*//)([^/]+/)*[^/]+$","default":"https://pub.dev","order":39},"dependi.dart.unstableFilter":{"type":"string","enum":["Exclude","IncludeAlways","IncludeIfUnstable"],"default":"Exclude","scope":"resource","enumDescriptions":["Exclude them (default)","Include them and always consider as latest","Include if the current version is already unstable"],"description":"Filter unstable versions: Exclude, Include Always, or Include If Unstable.","order":40},"dependi.dart.ignoreLinePatterns":{"type":"string","scope":"resource","default":"","markdownDescription":"Matches lines based on `*` position: `text*`, `*text`, `*text*`. Multiple patterns can be used, separated by commas.","order":41},"dependi.dart.informPatchUpdates":{"type":"boolean","scope":"resource","default":false,"description":"Inform about available patch updates for Dart packages via decoration.","order":42},"dependi.dart.lockFileEnabled":{"type":"boolean","scope":"resource","default":true,"description":"Enable checking for Dart dependencies in lockfiles.","order":43},"dependi.dart.silenceVersionOverflows":{"type":"boolean","scope":"resource","default":false,"description":"Consider non-registry packages as up-to-date if their version exceeds the max.","order":44}}},{"title":"Vulnerability Settings","properties":{"dependi.vulnerability.enabled":{"type":"boolean","scope":"resource","default":true,"description":"Enable checking for vulnerabilities in dependencies.","order":45},"dependi.vulnerability.ghsa.enabled":{"type":"boolean","scope":"resource","default":false,"description":"Include GitHub Security Advisory vulnerabilities in checks.","order":46},"dependi.vulnerability.osvQueryURL.batch":{"type":"string","scope":"resource","description":"The URL for batch querying vulnerabilities via OSV.","format":"url","pattern":"^https?://(?!.*//)([^/]+/)*[^/]+$","default":"https://api.osv.dev/v1/querybatch","order":47},"dependi.vulnerability.osvQueryURL.single":{"type":"string","scope":"resource","description":"The URL for querying single vulnerabilities via OSV.","format":"url","pattern":"^https?://(?!.*//)([^/]+/)*[^/]+$","default":"https://api.osv.dev/v1/query","order":48}}},{"title":"UI Decorations","properties":{"dependi.decoration.position":{"type":"string","default":"after","enum":["before","after"],"scope":"resource","description":"Position of UI decorations relative to package names.","order":1},"dependi.decoration.compatible.template":{"type":"string","scope":"resource","default":"✅","description":"Decoration for compatible package versions.","order":5},"dependi.decoration.compatible.style":{"type":"object","default":null,"order":6,"description":"Style for compatible version decorations.","properties":{"after":{"type":"object","default":null,"scope":"resource","description":"Style for text after the package name.","properties":{"color":{"type":"string","scope":"resource","default":"#ffffffff","format":"color","description":"Text color."},"border":{"type":"string","scope":"resource","default":null,"description":"Text border."},"backgroundColor":{"type":"string","scope":"resource","default":"#00000000","format":"color","description":"Background color."}}},"before":{"type":"object","default":null,"scope":"resource","description":"Style for text before the package name.","properties":{"color":{"type":"string","scope":"resource","default":"#ffffffff","format":"color","description":"Text color."},"border":{"type":"string","scope":"resource","default":null,"description":"Text border."},"backgroundColor":{"type":"string","scope":"resource","default":"#00000000","format":"color","description":"Background color."}}}}},"dependi.decoration.patchAvailable.template":{"type":"string","scope":"resource","default":"⚠️ ${version}","description":"Decoration for package versions has a semver patch available.","order":10},"dependi.decoration.patchAvailable.style":{"type":"object","default":null,"order":11,"description":"Style for decorations when package version has a semver patch available.","properties":{"after":{"type":"object","default":null,"scope":"resource","description":"Style for text after the package name.","properties":{"color":{"type":"string","scope":"resource","default":"#ffffffff","format":"color","description":"Text color."},"border":{"type":"string","scope":"resource","default":"","description":"Text border."},"backgroundColor":{"type":"string","scope":"resource","default":"#00000000","format":"color","description":"Background color."}}},"before":{"type":"object","default":null,"scope":"resource","description":"Style for text before the package name.","properties":{"color":{"type":"string","scope":"resource","default":"#ffffffff","format":"color","description":"Text color."},"border":{"type":"string","scope":"resource","default":"","description":"Text border."},"backgroundColor":{"type":"string","scope":"resource","default":"#00000000","format":"color","description":"Background color."}}}}},"dependi.decoration.incompatible.template":{"type":"string","scope":"resource","default":"❌ ${version}","description":"Decoration for incompatible package versions.","order":12},"dependi.decoration.incompatible.style":{"type":"object","default":null,"order":13,"description":"Style for incompatible version decorations.","properties":{"after":{"type":"object","default":null,"scope":"resource","description":"Style for text after the package name.","properties":{"color":{"type":"string","scope":"resource","default":"#ffffffff","format":"color","description":"Text color."},"border":{"type":"string","scope":"resource","default":"","description":"Text border."},"backgroundColor":{"type":"string","scope":"resource","default":"#00000000","format":"color","description":"Background color."}}},"before":{"type":"object","default":null,"scope":"resource","description":"Style for text before the package name.","properties":{"color":{"type":"string","scope":"resource","default":"#ffffffff","format":"color","description":"Text color."},"border":{"type":"string","scope":"resource","default":"","description":"Text border."},"backgroundColor":{"type":"string","scope":"resource","default":"#00000000","format":"color","description":"Background color."}}}}},"dependi.decoration.error.template":{"type":"string","scope":"resource","default":"❗️❗️❗️","description":"Decoration for error package versions.","order":15},"dependi.decoration.error.style":{"type":"object","default":null,"order":16,"description":"Style for error version decorations.","properties":{"after":{"type":"object","default":null,"scope":"resource","description":"Style for text after the package name.","properties":{"color":{"type":"string","scope":"resource","default":"#ffffffff","format":"color","description":"Text color."},"border":{"type":"string","scope":"resource","default":"","description":"Text border."},"backgroundColor":{"type":"string","scope":"resource","default":"#00000000","format":"color","description":"Background color."}}},"before":{"type":"object","default":null,"scope":"resource","description":"Style for text before the package name.","properties":{"color":{"type":"string","scope":"resource","default":"#ffffffff","format":"color","description":"Text color."},"border":{"type":"string","scope":"resource","default":"","description":"Text border."},"backgroundColor":{"type":"string","scope":"resource","default":"#00000000","format":"color","description":"Background color."}}}}},"dependi.decoration.vulnerability.template":{"type":"string","scope":"resource","default":"🚨 ${count}","description":"Decoration for vulnerable package versions.","order":20}}},{"title":"Extras","properties":{"dependi.extras.silenceUpdateMessages":{"type":"boolean","scope":"resource","default":false,"description":"Enable to silence informational update messages.","order":1}}}]},"main":"./out/main.js","scripts":{"vscode:prepublish":"npm run esbuild-base -- --minify","esbuild-base":"esbuild ./src/extension.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node --metafile=meta.json","esbuild":"npm run esbuild-base -- --sourcemap","esbuild-watch":"npm run esbuild-base -- --sourcemap --watch","test-compile":"tsc -p ./","build":"npm run esbuild","package":"npx vsce package"},"types":"vscode","devDependencies":{"@types/glob":"8.1.0","@types/mocha":"10.0.7","@types/node":"22.5.0","@types/semver":"7.5.8","@types/vscode":"1.87.0","@types/vscode-webview":"1.57.5","@typescript-eslint/eslint-plugin":"8.2.0","@typescript-eslint/parser":"8.2.0","@vscode/test-electron":"2.4.1","esbuild":"0.23.1","eslint":"9.9.0","glob":"11.0.0","mocha":"10.7.3","typescript":"5.5.4"},"dependencies":{"@neuralegion/cvss":"1.2.2","fast-toml":"0.5.4","node-cache":"5.1.2","release-please":"16.12.0","semver":"7.6.3"},"extensionDependencies":["vscode.git"]},"location":{"$mid":1,"path":"/home/shiri/.vscode-oss/extensions/fill-labs.dependi-0.7.15-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"fill-labs","metadata":{"installedTimestamp":1760377812252,"pinned":false,"source":"gallery","id":"456278dd-7f50-4cbe-8314-ab06540c1057","publisherId":"250a42ca-96a3-4224-91b7-caf37e830adb","publisherDisplayName":"fill-labs","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":190075},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-python.vscode-python-envs","uuid":"b41d8e8a-b6d4-4202-8f07-7189bdda81be"},"manifest":{"name":"vscode-python-envs","displayName":"Python Environments","description":"Provides a unified python environment experience","version":"1.10.0","publisher":"ms-python","preview":true,"engines":{"vscode":"^1.104.0-20250815"},"categories":["Other"],"enabledApiProposals":["terminalShellEnv"],"capabilities":{"untrustedWorkspaces":{"supported":false,"description":"This extension doesn't support untrusted workspaces."},"virtualWorkspaces":{"supported":false,"description":"This extension doesn't support virtual workspaces."}},"activationEvents":["onLanguage:python"],"homepage":"https://github.com/microsoft/vscode-python-environments","repository":{"type":"git","url":"https://github.com/microsoft/vscode-python-environments.git"},"bugs":{"url":"https://github.com/microsoft/vscode-python-environments/issues"},"main":"./dist/extension.js","l10n":"./l10n","icon":"icon.png","contributes":{"configuration":{"properties":{"python-envs.defaultEnvManager":{"type":"string","description":"The default environment manager for creating and managing environments.","default":"ms-python.python:venv","scope":"window"},"python-envs.defaultPackageManager":{"type":"string","description":"The default package manager for installing packages in environments.","default":"ms-python.python:pip","scope":"window"},"python-envs.pythonProjects":{"type":"array","default":[],"description":"The list of Python projects.","scope":"resource","items":{"type":"object","properties":{"path":{"type":"string","description":"The path to a folder or file in the workspace to be treated as a Python project."},"envManager":{"type":"string","description":"The environment manager for creating and managing environments for this project.","default":"ms-python.python:venv"},"packageManager":{"type":"string","description":"The package manager for managing packages in environments for this project.","default":"ms-python.python:pip"}}}},"python-envs.terminal.showActivateButton":{"type":"boolean","description":"Whether to show the 'Activate' button in the terminal menu","default":false,"scope":"machine","tags":["onExP","preview"]},"python-envs.terminal.autoActivationType":{"type":"string","markdownDescription":"Specifies how the extension can activate an environment in a terminal.\n\nUtilizing Shell Startup requires changes to the shell script file and is only enabled for the following shells: zsh, fsh, pwsh, bash, cmd. When set to `command`, any shell can be activated.\n\nThis setting takes precedence over the legacy `python.terminal.activateEnvironment` setting. If this setting is not explicitly set and `python.terminal.activateEnvironment` is set to false, this setting will automatically be set to `off` to preserve your preference.\n\nThis setting applies only when terminals are created, so you will need to restart your terminals for it to take effect.\n\nTo revert changes made during shellStartup, run `Python Envs: Revert Shell Startup Script Changes`.","default":"command","enum":["command","shellStartup","off"],"markdownEnumDescriptions":["Activation by executing a command in the terminal.","Activation by modifying the terminal shell startup script. To use this feature we will need to modify your shell startup scripts.","No automatic activation of environments."],"scope":"machine"},"python.terminal.useEnvFile":{"type":"boolean","description":"Controls whether environment variables from .env files and python.envFile setting are injected into terminals.","default":false,"scope":"resource"},"python-env.globalSearchPaths":{"type":"array","description":"Global search paths for Python environments. Absolute directory paths that are searched at the user level.","default":[],"scope":"machine","items":{"type":"string"}},"python-env.workspaceSearchPaths":{"type":"array","description":"Workspace search paths for Python environments. Can be absolute paths or relative directory paths searched within the workspace.","default":[],"scope":"resource","items":{"type":"string"}}}},"commands":[{"command":"python-envs.setEnvManager","title":"Set Environment Manager","category":"Python","icon":"$(gear)","when":"config.python.useEnvironmentsExtension != false"},{"command":"python-envs.setPkgManager","title":"Set Package Manager","category":"Python","icon":"$(package)"},{"command":"python-envs.addPythonProject","title":"Add Python Project","category":"Python","icon":"$(new-folder)"},{"command":"python-envs.addPythonProjectGivenResource","title":"Add as Python Project","category":"Python","icon":"$(new-folder)"},{"command":"python-envs.removePythonProject","title":"Remove Python Project","category":"Python","icon":"$(remove)"},{"command":"python-envs.create","title":"Create Environment","category":"Python","icon":"$(add)"},{"command":"python-envs.createAny","title":"Create Environment","category":"Python","icon":"$(add)"},{"command":"python-envs.set","title":"Set Project Environment","category":"Python","icon":"$(check)"},{"command":"python-envs.setEnv","title":"Set As Project Environment","category":"Python","icon":"$(check)"},{"command":"python-envs.remove","title":"Delete Environment","category":"Python","icon":"$(remove)"},{"command":"python-envs.refreshAllManagers","title":"Refresh All Environment Managers","shortTitle":"Refresh All","category":"Python","icon":"$(refresh)"},{"command":"python-envs.refreshPackages","title":"Refresh Packages List","category":"Python","icon":"$(refresh)"},{"command":"python-envs.packages","title":"Manage Packages","category":"Python","icon":"$(package)"},{"command":"python-envs.clearCache","title":"Clear Cache","category":"Python","icon":"$(trash)"},{"command":"python-envs.runInTerminal","title":"Run in Terminal","category":"Python Envs","icon":"$(play)"},{"command":"python-envs.createTerminal","title":"Create Python Terminal","category":"Python Envs","icon":"$(terminal)"},{"command":"python-envs.createNewProjectFromTemplate","title":"Create New Project from Template","category":"Python Envs","icon":"$(play)"},{"command":"python-envs.runAsTask","title":"Run as Task","category":"Python Envs","icon":"$(play)"},{"command":"python-envs.terminal.activate","title":"Activate Environment in Current Terminal","category":"Python Envs","icon":"$(python)"},{"command":"python-envs.terminal.deactivate","title":"Deactivate Environment in Current Terminal","category":"Python Envs","icon":"$(circle-slash)"},{"command":"python-envs.uninstallPackage","title":"Uninstall Package","category":"Python Envs","icon":"$(trash)"},{"command":"python-envs.copyEnvPath","title":"Copy Environment Path","category":"Python Envs","icon":"$(copy)"},{"command":"python-envs.copyProjectPath","title":"Copy Project Path","category":"Python Envs","icon":"$(copy)"},{"command":"python-envs.terminal.revertStartupScriptChanges","title":"Revert Shell Startup Script Changes","category":"Python Envs","icon":"$(discard)"},{"command":"python-envs.reportIssue","title":"Report Issue","category":"Python Environments"},{"command":"python-envs.revealProjectInExplorer","title":"Reveal Project in Explorer","category":"Python Envs","icon":"$(folder-opened)"},{"command":"python-envs.runPetInTerminal","title":"Run Python Environment Tool (PET) in Terminal...","category":"Python","icon":"$(terminal)","when":"config.python.useEnvironmentsExtension != false"}],"menus":{"commandPalette":[{"command":"python-envs.refreshAllManagers","when":"false"},{"command":"python-envs.refreshPackages","when":"false"},{"command":"python-envs.create","when":"false"},{"command":"python-envs.setEnv","when":"false"},{"command":"python-envs.remove","when":"false"},{"command":"python-envs.addPythonProject","when":"false"},{"command":"python-envs.addPythonProjectGivenResource","when":"false"},{"command":"python-envs.setEnvManager","when":"config.python.useEnvironmentsExtension != false"},{"command":"python-envs.packages","when":"config.python.useEnvironmentsExtension != false"},{"command":"python-envs.set","when":"config.python.useEnvironmentsExtension != false"},{"command":"python-envs.setPkgManager","when":"config.python.useEnvironmentsExtension != false"},{"command":"python-envs.removePythonProject","when":"false"},{"command":"python-envs.createTerminal","when":"false"},{"command":"python-envs.runInTerminal","when":"false"},{"command":"python-envs.runAsTask","when":"config.python.useEnvironmentsExtension != false"},{"command":"python-envs.terminal.activate","when":"pythonTerminalActivation"},{"command":"python-envs.terminal.deactivate","when":"pythonTerminalActivation"},{"command":"python-envs.uninstallPackage","when":"false"},{"command":"python-envs.copyEnvPath","when":"false"},{"command":"python-envs.copyProjectPath","when":"false"},{"command":"python-envs.createAny","when":"false"},{"command":"python-envs.revealProjectInExplorer","when":"false"},{"command":"python-envs.createNewProjectFromTemplate","when":"config.python.useEnvironmentsExtension != false"},{"command":"python-envs.terminal.revertStartupScriptChanges","when":"config.python.useEnvironmentsExtension != false"},{"command":"python-envs.reportIssue","when":"config.python.useEnvironmentsExtension != false"}],"view/item/context":[{"command":"python-envs.create","group":"inline","when":"view == env-managers && viewItem =~ /.*pythonEnvManager.*;create;.*/"},{"command":"python-envs.remove","when":"view == env-managers && viewItem =~ /.*pythonEnvironment.*;remove;.*/"},{"command":"python-envs.setEnv","group":"inline","when":"view == env-managers && viewItem =~ /.*pythonEnvironment.*/"},{"command":"python-envs.createTerminal","group":"inline","when":"view == env-managers && viewItem =~ /.*pythonEnvironment.*;activatable;.*/"},{"command":"python-envs.refreshPackages","when":"view == env-managers && viewItem =~ /.*pythonEnvironment.*/"},{"command":"python-envs.packages","group":"inline","when":"view == env-managers && viewItem =~ /.*pythonEnvironment.*/"},{"command":"python-envs.copyEnvPath","group":"inline","when":"view == env-managers && viewItem =~ /.*pythonEnvironment.*/"},{"command":"python-envs.uninstallPackage","group":"inline","when":"view == env-managers && viewItem == python-package"},{"command":"python-envs.copyEnvPath","group":"inline","when":"view == python-projects && viewItem == python-env"},{"command":"python-envs.remove","when":"view == python-projects && viewItem == python-env"},{"command":"python-envs.removePythonProject","when":"view == python-projects && viewItem == python-workspace-removable"},{"command":"python-envs.set","group":"inline","when":"view == python-projects && viewItem =~ /.*python-workspace.*/"},{"command":"python-envs.createTerminal","group":"inline","when":"view == python-projects && viewItem =~ /.*python-workspace.*/"},{"command":"python-envs.copyProjectPath","group":"inline","when":"view == python-projects && viewItem =~ /.*python-workspace.*/"},{"command":"python-envs.revealProjectInExplorer","when":"view == python-projects && viewItem =~ /.*python-workspace.*/"},{"command":"python-envs.uninstallPackage","group":"inline","when":"view == python-projects && viewItem == python-package"}],"view/title":[{"command":"python-envs.addPythonProject","group":"navigation","when":"view == python-projects"},{"command":"python-envs.createAny","group":"navigation","when":"view == env-managers"},{"command":"python-envs.refreshAllManagers","group":"navigation","when":"view == env-managers"},{"command":"python-envs.terminal.activate","group":"navigation","when":"view == terminal && config.python-envs.terminal.showActivateButton && pythonTerminalActivation && !pythonTerminalActivated"},{"command":"python-envs.terminal.deactivate","group":"navigation","when":"view == terminal && config.python-envs.terminal.showActivateButton && pythonTerminalActivation && pythonTerminalActivated"}],"explorer/context":[{"command":"python-envs.addPythonProjectGivenResource","group":"inline","when":"explorerViewletVisible && explorerResourceIsFolder"},{"command":"python-envs.addPythonProjectGivenResource","group":"inline","when":"explorerViewletVisible && resourceExtname == .py"}],"editor/title":[{"command":"python-envs.terminal.activate","group":"navigation","when":"resourceScheme == vscode-terminal && config.python-envs.terminal.showActivateButton && pythonTerminalActivation && !pythonTerminalActivated"},{"command":"python-envs.terminal.deactivate","group":"navigation","when":"resourceScheme == vscode-terminal && config.python-envs.terminal.showActivateButton && pythonTerminalActivation && pythonTerminalActivated"}],"editor/title/run":[{"command":"python-envs.runAsTask","group":"Python","when":"editorLangId == python"}],"terminal/title/context":[{"command":"python-envs.terminal.activate","when":"pythonTerminalActivation && !pythonTerminalActivated"},{"command":"python-envs.terminal.deactivate","when":"pythonTerminalActivation && pythonTerminalActivated"}]},"viewsContainers":{"activitybar":[{"id":"python","title":"Python","icon":"files/logo.svg","when":"config.python.useEnvironmentsExtension != false"}]},"views":{"python":[{"id":"python-projects","name":"Python Projects","icon":"files/logo.svg","contextualTitle":"Python Projects","when":"config.python.useEnvironmentsExtension != false"},{"id":"env-managers","name":"Environment Managers","icon":"files/logo.svg","contextualTitle":"Environment Managers","when":"config.python.useEnvironmentsExtension != false"}]},"taskDefinitions":[{"type":"python"}]},"scripts":{"vscode:prepublish":"npm run package","compile":"webpack","watch":"webpack --watch","package":"webpack --mode production --devtool source-map --config ./webpack.config.js","compile-tests":"tsc -p . --outDir out","watch-tests":"tsc -p . -w --outDir out","pretest":"npm run compile-tests && npm run compile","lint":"eslint --config=eslint.config.mjs src","unittest":"mocha --config=./build/.mocha.unittests.json","vsce-package":"vsce package -o ms-python-envs-insiders.vsix"},"devDependencies":{"@types/fs-extra":"^11.0.4","@types/glob":"^8.1.0","@types/mocha":"^10.0.1","@types/node":"20.2.5","@types/sinon":"^17.0.3","@types/stack-trace":"0.0.29","@types/vscode":"^1.99.0","@types/which":"^3.0.4","@typescript-eslint/eslint-plugin":"^8.16.0","@typescript-eslint/parser":"^8.16.0","@vscode/test-electron":"^2.3.2","@vscode/vsce":"^2.24.0","eslint":"^9.15.0","glob":"^8.1.0","mocha":"^10.8.2","sinon":"^19.0.2","ts-loader":"^9.4.3","ts-mockito":"^2.6.1","typemoq":"^2.1.0","typescript":"^5.1.3","webpack":"^5.85.0","webpack-cli":"^5.1.1"},"dependencies":{"@iarna/toml":"^2.2.5","@vscode/extension-telemetry":"^0.9.7","@vscode/test-cli":"^0.0.10","dotenv":"^16.4.5","fs-extra":"^11.2.0","stack-trace":"0.0.10","vscode-jsonrpc":"^9.0.0-next.5","which":"^4.0.0"}},"location":{"$mid":1,"path":"/home/shiri/.vscode-oss/extensions/ms-python.vscode-python-envs-1.10.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"ms-python","metadata":{"installedTimestamp":1760861701175,"pinned":false,"source":"gallery","id":"b41d8e8a-b6d4-4202-8f07-7189bdda81be","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"ms-python","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":2867017},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-python.python","uuid":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5"},"manifest":{"name":"python","displayName":"Python","description":"Python language support with extension access points for IntelliSense (Pylance), Debugging (Python Debugger), linting, formatting, refactoring, unit tests, and more.","version":"2025.16.0","featureFlags":{"usingNewInterpreterStorage":true},"capabilities":{"untrustedWorkspaces":{"supported":false,"description":"The Python extension is not available in untrusted workspaces. Use Pylance to get partial IntelliSense support for Python files."},"virtualWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense supported."}},"publisher":"ms-python","enabledApiProposals":["contribEditorContentMenu","quickPickSortByLabel","testObserver","quickPickItemTooltip","terminalDataWriteEvent","terminalExecuteCommandEvent","codeActionAI","notebookReplDocument","notebookVariableProvider"],"author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-python"},"bugs":{"url":"https://github.com/Microsoft/vscode-python/issues"},"qna":"https://github.com/microsoft/vscode-python/discussions/categories/q-a","icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"engines":{"vscode":"^1.95.0"},"enableTelemetry":false,"keywords":["python","django","unittest","multi-root ready"],"categories":["Programming Languages","Debuggers","Other","Data Science","Machine Learning"],"activationEvents":["onDebugInitialConfigurations","onLanguage:python","onDebugResolve:python","onCommand:python.copilotSetupTests","workspaceContains:mspythonconfig.json","workspaceContains:pyproject.toml","workspaceContains:Pipfile","workspaceContains:setup.py","workspaceContains:requirements.txt","workspaceContains:pylock.toml","workspaceContains:**/pylock.*.toml","workspaceContains:manage.py","workspaceContains:app.py","workspaceContains:.venv","workspaceContains:.conda","onLanguageModelTool:get_python_environment_details","onLanguageModelTool:get_python_executable_details","onLanguageModelTool:install_python_packages","onLanguageModelTool:configure_python_environment","onLanguageModelTool:create_virtual_environment","onTerminalShellIntegration:python"],"main":"./out/client/extension","browser":"./dist/extension.browser.js","l10n":"./l10n","contributes":{"problemMatchers":[{"name":"python","owner":"python","source":"python","fileLocation":"autoDetect","pattern":[{"regexp":"^.*File \\\"([^\\\"]|.*)\\\", line (\\d+).*","file":1,"line":2},{"regexp":"^\\s*(.*)\\s*$"},{"regexp":"^\\s*(.*Error.*)$","message":1}]}],"walkthroughs":[{"id":"pythonWelcome","title":"Get Started with Python Development","description":"Your first steps to set up a Python project with all the powerful tools and features that the Python extension has to offer!","when":"workspacePlatform != webworker","steps":[{"id":"python.createPythonFolder","title":"Open a Python project folder","description":"[Open](command:workbench.action.files.openFolder) or create a project folder.\n[Open Project Folder](command:workbench.action.files.openFolder)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."},"when":"workspaceFolderCount = 0"},{"id":"python.createPythonFile","title":"Create a Python file","description":"[Open](command:toSide:workbench.action.files.openFile) or [create](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D) a Python file - make sure to save it as \".py\".\n[Create Python File](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."}},{"id":"python.installPythonWin8","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python [from python.org](https://www.python.org/downloads).\n\n[Install Python](https://www.python.org/downloads)\n","media":{"markdown":"resources/walkthrough/install-python-windows-8.md"},"when":"workspacePlatform == windows && showInstallPythonTile"},{"id":"python.installPythonMac","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via Brew](command:python.installPythonOnMac)\n","media":{"markdown":"resources/walkthrough/install-python-macos.md"},"when":"workspacePlatform == mac && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.installPythonLinux","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via terminal](command:python.installPythonOnLinux)\n","media":{"markdown":"resources/walkthrough/install-python-linux.md"},"when":"workspacePlatform == linux && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.createEnvironment","title":"Select or create a Python environment","description":"Create an environment for your Python project or use [Select Python Interpreter](command:python.setInterpreter) to select an existing one.\n[Create Environment](command:python.createEnvironment)\n**Tip**: Run the ``Python: Create Environment`` command in the [Command Palette](command:workbench.action.showCommands).","media":{"svg":"resources/walkthrough/create-environment.svg","altText":"Creating a Python environment from the Command Palette"}},{"id":"python.runAndDebug","title":"Run and debug your Python file","description":"Open your Python file  and click on the play button on the top right of the editor, or press F5 when on the file and select \"Python File\" to run with the debugger. \n  \n[Learn more](https://code.visualstudio.com/docs/python/python-tutorial#_run-hello-world)","media":{"svg":"resources/walkthrough/rundebug2.svg","altText":"How to run and debug in VS Code with F5 or the play button on the top right."}},{"id":"python.learnMoreWithDS","title":"Keep exploring!","description":"🎨 Explore all the features the Python extension has to offer by looking for \"Python\" in the [Command Palette](command:workbench.action.showCommands). \n 📈 Learn more about getting started with [data science](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) in Python. \n ✨ Take a look at our [Release Notes](https://aka.ms/AA8dxtb) to learn more about the latest features. \n \n[Follow along with the Python Tutorial](https://aka.ms/AA8dqti)","media":{"altText":"Image representing our documentation page and mailing list resources.","svg":"resources/walkthrough/learnmore.svg"}}]},{"id":"pythonDataScienceWelcome","title":"Get Started with Python for Data Science","description":"Your first steps to getting started with a Data Science project with Python!","when":"false","steps":[{"id":"python.installJupyterExt","title":"Install Jupyter extension","description":"If you haven't already, install the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") to take full advantage of notebooks experiences in VS Code!\n \n[Search Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\")","media":{"svg":"resources/walkthrough/data-science.svg","altText":"Creating a new Jupyter notebook"}},{"id":"python.createNewNotebook","title":"Create or open a Jupyter Notebook","description":"Right click in the file explorer and create a new file with an .ipynb extension. Or, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create New Blank Notebook``.\n[Create new Jupyter Notebook](command:toSide:jupyter.createnewnotebook)\n If you have an existing project, you can also [open a folder](command:workbench.action.files.openFolder) and/or clone a project from GitHub: [clone a Git repository](command:git.clone).","media":{"svg":"resources/walkthrough/create-notebook.svg","altText":"Creating a new Jupyter notebook"},"completionEvents":["onCommand:jupyter.createnewnotebook","onCommand:workbench.action.files.openFolder","onCommand:workbench.action.files.openFileFolder"]},{"id":"python.openInteractiveWindow","title":"Open the Python Interactive Window","description":"The Python Interactive Window is a Python shell where you can execute and view the results of your Python code. You can create cells on a Python file by typing ``#%%``.\n \nTo open the interactive window anytime, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create Interactive Window``.\n[Open Interactive Window](command:jupyter.createnewinteractive)","media":{"svg":"resources/walkthrough/interactive-window.svg","altText":"Opening Python interactive window"},"completionEvents":["onCommand:jupyter.createnewinteractive"]},{"id":"python.dataScienceLearnMore","title":"Find out more!","description":"📒 Take a look into the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") features, by looking for \"Jupyter\" in the [Command Palette](command:workbench.action.showCommands). \n 🏃🏻 Find out more features in our [Tutorials](https://aka.ms/AAdjzpd).  \n[Learn more](https://aka.ms/AAdar6q)","media":{"svg":"resources/walkthrough/learnmore.svg","altText":"Image representing our documentation page and mailing list resources."}}]}],"breakpoints":[{"language":"html"},{"language":"jinja"},{"language":"python"},{"language":"django-html"},{"language":"django-txt"}],"commands":[{"title":"New Python File","shortTitle":"Python File","category":"Python","command":"python.createNewFile"},{"category":"Python","command":"python.copyTestId","title":"Copy Test Id"},{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting"},{"category":"Python","command":"python.configureTests","title":"Configure Tests"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment..."},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment..."},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","shortTitle":"Run Selection/Line"},{"category":"Python","command":"python.execInREPL","title":"Run Selection/Line in Native Python REPL"},{"category":"Python","command":"python.reportIssue","title":"Report Issue..."},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter"},{"category":"Python","command":"python.startREPL","title":"Start Terminal REPL"},{"category":"Python","command":"python.startNativeREPL","title":"Start Native Python REPL"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output"},{"category":"Python","command":"python.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"},{"category":"Python","command":"python.installJupyter","title":"Install the Jupyter extension"}],"configuration":{"properties":{"python.activeStateToolPath":{"default":"state","description":"Path to the State Tool executable for ActiveState runtimes (version 0.36+).","scope":"machine-overridable","type":"string"},"python.autoComplete.extraPaths":{"default":[],"description":"List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.","scope":"resource","type":"array","uniqueItems":true},"python.createEnvironment.contentButton":{"default":"hide","markdownDescription":"Show or hide Create Environment button in the editor for `requirements.txt` or other dependency files.","scope":"machine-overridable","type":"string","enum":["show","hide"]},"python.createEnvironment.trigger":{"default":"prompt","markdownDescription":"Detect if environment creation is required for the current project","scope":"machine-overridable","type":"string","enum":["off","prompt"]},"python.condaPath":{"default":"","description":"Path to the conda executable to use for activation (version 4.4+).","scope":"machine","type":"string"},"python.defaultInterpreterPath":{"default":"python","markdownDescription":"Path to default Python to use when extension loads up for the first time, no longer used once an interpreter is selected for the workspace. See [here](https://aka.ms/AAfekmf) to understand when this is used","scope":"machine-overridable","type":"string"},"python.envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","scope":"resource","type":"string"},"python.useEnvironmentsExtension":{"default":false,"description":"Enables the Python Environments extension. Requires window reload on change.","scope":"machine-overridable","type":"boolean","tags":["onExP","preview"]},"python.experiments.enabled":{"default":true,"description":"Enables A/B tests experiments in the Python extension. If enabled, you may get included in proposed enhancements and/or features.","scope":"window","type":"boolean"},"python.experiments.optInto":{"default":[],"markdownDescription":"List of experiments to opt into. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment."]},"scope":"window","type":"array","uniqueItems":true},"python.experiments.optOutFrom":{"default":[],"markdownDescription":"List of experiments to opt out of. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment."]},"scope":"window","type":"array","uniqueItems":true},"python.globalModuleInstallation":{"default":false,"description":"Whether to install Python modules globally when not using an environment.","scope":"resource","type":"boolean"},"python.languageServer":{"default":"Default","description":"Defines type of the language server.","enum":["Default","Jedi","Pylance","None"],"enumDescriptions":["Automatically select a language server: Pylance if installed and available, otherwise fallback to Jedi.","Use Jedi behind the Language Server Protocol (LSP) as a language server.","Use Pylance as a language server.","Disable language server capabilities."],"scope":"window","type":"string"},"python.interpreter.infoVisibility":{"default":"onPythonRelated","description":"Controls when to display information of selected interpreter in the status bar.","enum":["never","onPythonRelated","always"],"enumDescriptions":["Never display information.","Only display information if Python-related files are opened.","Always display information."],"scope":"machine","type":"string"},"python.logging.level":{"default":"error","deprecationMessage":"This setting is deprecated. Please use command `Developer: Set Log Level...` to set logging level.","description":"The logging level the extension logs at, defaults to 'error'","enum":["debug","error","info","off","warn"],"scope":"machine","type":"string"},"python.missingPackage.severity":{"default":"Hint","description":"Set severity of missing packages in requirements.txt or pyproject.toml","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.locator":{"default":"js","description":"[Experimental] Select implementation of environment locators. This is an experimental setting while we test native environment location.","enum":["js","native"],"tags":["onExP","preview"],"scope":"machine","type":"string"},"python.pipenvPath":{"default":"pipenv","description":"Path to the pipenv executable to use for activation.","scope":"machine-overridable","type":"string"},"python.poetryPath":{"default":"poetry","description":"Path to the poetry executable.","scope":"machine-overridable","type":"string"},"python.pixiToolPath":{"default":"pixi","description":"Path to the pixi executable.","scope":"machine-overridable","type":"string"},"python.terminal.activateEnvInCurrentTerminal":{"default":false,"description":"Activate Python Environment in the current Terminal on load of the Extension.","scope":"resource","type":"boolean"},"python.terminal.activateEnvironment":{"default":true,"description":"Activate Python Environment in all Terminals created.","scope":"resource","type":"boolean"},"python.terminal.executeInFileDir":{"default":false,"description":"When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.","scope":"resource","type":"boolean"},"python.terminal.focusAfterLaunch":{"default":false,"description":"When launching a python terminal, whether to focus the cursor on the terminal.","scope":"resource","type":"boolean"},"python.terminal.launchArgs":{"default":[],"description":"Python launch arguments to use when executing a file in the terminal.","scope":"resource","type":"array"},"python.terminal.shellIntegration.enabled":{"default":true,"markdownDescription":"Enable [shell integration](https://code.visualstudio.com/docs/terminal/shell-integration) for the terminals running python. Shell integration enhances the terminal experience by enabling command decorations, run recent command, improving accessibility among other things. Note: PyREPL (available in Python 3.13+) is automatically disabled when shell integration is enabled to avoid cursor indentation issues.","scope":"resource","type":"boolean","tags":["preview"]},"python.REPL.enableREPLSmartSend":{"default":true,"description":"Toggle Smart Send for the Python REPL. Smart Send enables sending the smallest runnable block of code to the REPL on Shift+Enter and moves the cursor accordingly.","scope":"resource","type":"boolean"},"python.REPL.sendToNativeREPL":{"default":false,"description":"Toggle to send code to Python REPL instead of the terminal on execution. Turning this on will change the behavior for both Smart Send and Run Selection/Line in the Context Menu.","scope":"resource","type":"boolean"},"python.REPL.provideVariables":{"default":true,"description":"Toggle to provide variables for the REPL variable view for the native REPL.","scope":"resource","type":"boolean"},"python.testing.autoTestDiscoverOnSaveEnabled":{"default":true,"description":"Enable auto run test discovery when saving a test file.","scope":"resource","type":"boolean"},"python.testing.autoTestDiscoverOnSavePattern":{"default":"**/*.py","description":"Glob pattern used to determine which files are used by autoTestDiscoverOnSaveEnabled.","scope":"resource","type":"string"},"python.testing.cwd":{"default":null,"description":"Optional working directory for tests.","scope":"resource","type":"string"},"python.testing.debugPort":{"default":3000,"description":"Port number used for debugging of tests.","scope":"resource","type":"number"},"python.testing.promptToConfigure":{"default":true,"description":"Prompt to configure a test framework if potential tests directories are discovered.","scope":"resource","type":"boolean"},"python.testing.pytestArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.pytestEnabled":{"default":false,"description":"Enable testing using pytest.","scope":"resource","type":"boolean"},"python.testing.pytestPath":{"default":"pytest","description":"Path to pytest. You can use a custom version of pytest by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.testing.unittestArgs":{"default":["-v","-s",".","-p","*test*.py"],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.unittestEnabled":{"default":false,"description":"Enable testing using unittest.","scope":"resource","type":"boolean"},"python.venvFolders":{"default":[],"description":"Folders in your home directory to look into for virtual environments (supports pyenv, direnv and virtualenvwrapper by default).","items":{"type":"string"},"scope":"machine","type":"array","uniqueItems":true},"python.venvPath":{"default":"","description":"Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).","scope":"machine","type":"string"}},"title":"Python","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":"number"}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":"number"}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"description":"Port to connect to.","type":"number"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":["array","string"]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"consoleTitle":{"default":"Python Debug Console","description":"Display name of the debug console or terminal"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"host":{"default":"localhost","description":"IP address of the of the local debug server (default is localhost).","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"default":0,"description":"Debug port (default is 0, resulting in the use of a dynamic port).","type":"number"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"}}}},"deprecated":"This configuration will be deprecated soon. Please replace `python` with `debugpy` to use the new Python Debugger extension.","configurationSnippets":[],"label":"Python","languages":["python"],"type":"python","variables":{"pickProcess":"python.pickLocalProcess"},"when":"!virtualWorkspace && shellExecutionSupported","hiddenWhen":"true"}],"grammars":[{"language":"pip-requirements","path":"./syntaxes/pip-requirements.tmLanguage.json","scopeName":"source.pip-requirements"}],"jsonValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"keybindings":[{"command":"python.execSelectionInTerminal","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !isCompositeNotebook"},{"command":"python.execInREPL","key":"shift+enter","when":"config.python.REPL.sendToNativeREPL && editorLangId == python && editorTextFocus && !jupyter.ownsSelection && !notebookEditorFocused && !isCompositeNotebook"},{"command":"python.execInREPLEnter","key":"enter","when":"!config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && activeEditor == 'workbench.editor.repl' && !inlineChatFocused && !notebookCellListFocused"},{"command":"python.execInInteractiveWindowEnter","key":"enter","when":"!config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && activeEditor == 'workbench.editor.interactive' && !inlineChatFocused && !notebookCellListFocused"}],"languages":[{"aliases":["Jinja"],"extensions":[".j2",".jinja2"],"id":"jinja"},{"aliases":["pip requirements","requirements.txt"],"configuration":"./languages/pip-requirements.json","filenamePatterns":["**/*requirements*.{txt, in}","**/*constraints*.txt","**/requirements/*.{txt,in}","**/constraints/*.txt"],"filenames":["constraints.txt","requirements.in","requirements.txt"],"id":"pip-requirements"},{"filenames":[".condarc"],"id":"yaml"},{"filenames":[".flake8",".pep8",".pylintrc",".pypirc"],"id":"ini"},{"filenames":["Pipfile","poetry.lock","uv.lock"],"id":"toml"},{"filenames":["Pipfile.lock"],"id":"json"}],"menus":{"issue/reporter":[{"command":"python.reportIssue"}],"testing/item/context":[{"command":"python.copyTestId","group":"navigation","when":"controllerId == 'python-tests'"}],"testing/item/gutter":[{"command":"python.copyTestId","group":"navigation","when":"controllerId == 'python-tests'"}],"commandPalette":[{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server","when":"!virtualWorkspace && shellExecutionSupported && (editorLangId == python || notebookType == jupyter-notebook)"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.configureTests","title":"Configure Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment...","when":"false"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File","when":"false"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal","when":"false"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.copyTestId","title":"Copy Test Id","when":"false"},{"category":"Python","command":"python.execInREPL","title":"Run Selection/Line in Native Python REPL","when":"false"},{"category":"Python","command":"python.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.startREPL","title":"Start Terminal REPL","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.startNativeREPL","title":"Start Native Python REPL","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewOutput","title":"Show Output","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/content":[{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceLangId == pip-requirements && !virtualWorkspace && shellExecutionSupported && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"},{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceFilename == pyproject.toml && pipInstallableToml && !virtualWorkspace && shellExecutionSupported  && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"}],"editor/context":[{"submenu":"python.run","group":"Python","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && isWorkspaceTrusted && !inChat  && notebookType != jupyter-notebook"},{"submenu":"python.runFileInteractive","group":"Jupyter2","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && !isJupyterInstalled && isWorkspaceTrusted && !inChat"}],"python.runFileInteractive":[{"command":"python.installJupyter","group":"Jupyter2","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"python.run":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInDjangoShell","group":"Python","when":"editorHasSelection && editorLangId == python && python.isDjangoProject && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInTerminal","group":"Python","when":"!config.python.REPL.sendToNativeREPL && editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execInREPL","group":"Python","when":"editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported && config.python.REPL.sendToNativeREPL"}],"editor/title/run":[{"command":"python.execInTerminal-icon","group":"navigation@0","title":"Run Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execInDedicatedTerminal","group":"navigation@0","title":"Run Python File in Dedicated Terminal","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}],"explorer/context":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"file/newFile":[{"command":"python.createNewFile","group":"file","when":"!virtualWorkspace"}],"view/title":[{"command":"testing.reRunFailTests","when":"view == workbench.view.testing && hasFailedTests && !virtualWorkspace && shellExecutionSupported","group":"navigation@1"}]},"submenus":[{"id":"python.run","label":"Run Python","icon":"$(play)"},{"id":"python.runFileInteractive","label":"Run in Interactive window"}],"viewsWelcome":[{"view":"testing","contents":"Configure a test framework to see your tests here.\n[Configure Python Tests](command:python.configureTests)","when":"!virtualWorkspace && shellExecutionSupported"}],"yamlValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"languageModelTools":[{"name":"get_python_environment_details","displayName":"Get Python Environment Info","userDescription":"Get information for a Python Environment, such as Type, Version, Packages, and more.","modelDescription":"This tool will retrieve the details of the Python Environment for the specified file or workspace. The details returned include the 1. Type of Python Environment (conda, venv, etec), 2. Version of Python, 3. List of all installed Python packages with their versions. ALWAYS call configure_python_environment before using this tool.","toolReferenceName":"getPythonEnvironmentInfo","tags":["python","python environment","extension_installed_by_tool","enable_other_tool_configure_python_environment"],"icon":"$(snake)","canBeReferencedInPrompt":true,"inputSchema":{"type":"object","properties":{"resourcePath":{"type":"string","description":"The path to the Python file or workspace to get the environment information for."}},"required":[]}},{"name":"get_python_executable_details","displayName":"Get Python Executable","userDescription":"Get executable info for a Python Environment","modelDescription":"This tool will retrieve the details of the Python Environment for the specified file or workspace. ALWAYS use this tool before executing any Python command in the terminal. This tool returns the details of how to construct the fully qualified path and or command including details such as arguments required to run Python in a terminal. Note: Instead of executing `python --version` or `python -c 'import sys; print(sys.executable)'`, use this tool to get the Python executable path to replace the `python` command. E.g. instead of using `python -c 'import sys; print(sys.executable)'`, use this tool to build the command `conda run -n <env_name> -c 'import sys; print(sys.executable)'`. ALWAYS call configure_python_environment before using this tool.","toolReferenceName":"getPythonExecutableCommand","tags":["python","python environment","extension_installed_by_tool","enable_other_tool_configure_python_environment"],"icon":"$(terminal)","canBeReferencedInPrompt":true,"inputSchema":{"type":"object","properties":{"resourcePath":{"type":"string","description":"The path to the Python file or workspace to get the executable information for. If not provided, the current workspace will be used. Where possible pass the path to the file or workspace."}},"required":[]}},{"name":"install_python_packages","displayName":"Install Python Package","userDescription":"Installs Python packages in a Python Environment.","modelDescription":"Installs Python packages in the given workspace. Use this tool to install Python packages in the user's chosen Python environment. ALWAYS call configure_python_environment before using this tool.","toolReferenceName":"installPythonPackage","tags":["python","python environment","install python package","extension_installed_by_tool","enable_other_tool_configure_python_environment"],"icon":"$(package)","canBeReferencedInPrompt":true,"inputSchema":{"type":"object","properties":{"packageList":{"type":"array","items":{"type":"string"},"description":"The list of Python packages to install."},"resourcePath":{"type":"string","description":"The path to the Python file or workspace into which the packages are installed. If not provided, the current workspace will be used. Where possible pass the path to the file or workspace."}},"required":["packageList"]}},{"name":"configure_python_environment","displayName":"Configure Python Environment","modelDescription":"This tool configures a Python environment in the given workspace. ALWAYS Use this tool to set up the user's chosen environment and ALWAYS call this tool before using any other Python related tools or running any Python command in the terminal.","userDescription":"Configure a Python Environment for a workspace","toolReferenceName":"configurePythonEnvironment","tags":["python","python environment","extension_installed_by_tool"],"icon":"$(gear)","canBeReferencedInPrompt":true,"inputSchema":{"type":"object","properties":{"resourcePath":{"type":"string","description":"The path to the Python file or workspace for which a Python Environment needs to be configured."}},"required":[]}},{"name":"create_virtual_environment","displayName":"Create a Virtual Environment","modelDescription":"This tool will create a Virual Environment","tags":[],"canBeReferencedInPrompt":false,"inputSchema":{"type":"object","properties":{"packageList":{"type":"array","items":{"type":"string"},"description":"The list of packages to install."},"resourcePath":{"type":"string","description":"The path to the Python file or workspace for which a Python Environment needs to be configured."}},"required":[]},"when":"false"},{"name":"selectEnvironment","displayName":"Select a Python Environment","modelDescription":"This tool will prompt the user to select an existing Python Environment","tags":[],"canBeReferencedInPrompt":false,"inputSchema":{"type":"object","properties":{"resourcePath":{"type":"string","description":"The path to the Python file or workspace for which a Python Environment needs to be configured."}},"required":[]},"when":"false"}]},"copilot":{"tests":{"getSetupConfirmation":"python.copilotSetupTests"}},"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package -o ms-python-insiders.vsix","prePublish":"gulp clean && gulp prePublishNonBundle","compile":"tsc -watch -p ./","compileApi":"node ./node_modules/typescript/lib/tsc.js -b ./pythonExtensionApi/tsconfig.json","compiled":"deemon npm run compile","kill-compiled":"deemon --kill npm run compile","checkDependencies":"gulp checkDependencies","test":"node ./out/test/standardTest.js && node ./out/test/multiRootTest.js","test:unittests":"mocha --config ./build/.mocha.unittests.json","test:unittests:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --config ./build/.mocha.unittests.json","test:functional":"mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:perf":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.perf.json","test:functional:memleak":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:cover:report":"nyc --nycrc-path ./build/.nycrc  report --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura","testDebugger":"node ./out/test/testBootstrap.js ./out/test/debuggerTest.js","testDebugger:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/debuggerTest.js","testSingleWorkspace":"node ./out/test/testBootstrap.js ./out/test/standardTest.js","testSingleWorkspace:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/standardTest.js","preTestJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js","testJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js && cross-env CODE_TESTS_WORKSPACE=src/test VSC_PYTHON_CI_TEST_GREP='Language Server:' node ./out/test/testBootstrap.js ./out/test/standardTest.js && node ./out/test/languageServers/jedi/lspTeardown.js","testMultiWorkspace":"node ./out/test/testBootstrap.js ./out/test/multiRootTest.js","testPerformance":"node ./out/test/testBootstrap.js ./out/test/performanceTest.js","testSmoke":"cross-env INSTALL_JUPYTER_EXTENSION=true \"node ./out/test/smokeTest.js\"","testInsiders":"cross-env VSC_PYTHON_CI_TEST_VSC_CHANNEL=insiders INSTALL_PYLANCE_EXTENSION=true TEST_FILES_SUFFIX=insiders.test CODE_TESTS_WORKSPACE=src/testMultiRootWkspc/smokeTests \"node ./out/test/standardTest.js\"","lint-staged":"node gulpfile.js","lint":"eslint  src build pythonExtensionApi","lint-fix":"eslint --fix src build pythonExtensionApi gulpfile.js","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","clean":"gulp clean","addExtensionPackDependencies":"gulp addExtensionPackDependencies","updateBuildNumber":"gulp updateBuildNumber","verifyBundle":"gulp verifyBundle","webpack":"webpack"},"dependencies":{"@iarna/toml":"^2.2.5","@vscode/extension-telemetry":"^0.8.4","arch":"^2.1.0","fs-extra":"^11.2.0","glob":"^7.2.0","iconv-lite":"^0.6.3","inversify":"^6.0.2","jsonc-parser":"^3.0.0","lodash":"^4.17.21","minimatch":"^5.0.1","named-js-regexp":"^1.3.3","node-stream-zip":"^1.6.0","reflect-metadata":"^0.2.2","rxjs":"^6.5.4","rxjs-compat":"^6.5.4","semver":"^7.5.2","stack-trace":"0.0.10","sudo-prompt":"^9.2.1","tmp":"^0.2.5","uint64be":"^3.0.0","unicode":"^14.0.0","vscode-debugprotocol":"^1.28.0","vscode-jsonrpc":"^9.0.0-next.5","vscode-languageclient":"^10.0.0-next.12","vscode-languageserver-protocol":"^3.17.6-next.10","vscode-tas-client":"^0.1.84","which":"^2.0.2","winreg":"^1.2.4","xml2js":"^0.5.0"},"devDependencies":{"@istanbuljs/nyc-config-typescript":"^1.0.2","@types/bent":"^7.3.0","@types/chai":"^4.1.2","@types/chai-arrays":"^2.0.0","@types/chai-as-promised":"^7.1.0","@types/download":"^8.0.1","@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/lodash":"^4.14.104","@types/mocha":"^9.1.0","@types/node":"^22.5.0","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^17.0.3","@types/stack-trace":"0.0.29","@types/tmp":"^0.0.33","@types/vscode":"^1.95.0","@types/which":"^2.0.1","@types/winreg":"^1.2.30","@types/xml2js":"^0.4.2","@typescript-eslint/eslint-plugin":"^6.21.0","@typescript-eslint/parser":"^6.21.0","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^2.27.0","bent":"^7.3.12","chai":"^4.1.2","chai-arrays":"^2.0.0","chai-as-promised":"^7.1.1","copy-webpack-plugin":"^9.1.0","cross-env":"^7.0.3","cross-spawn":"^6.0.5","del":"^6.0.0","download":"^8.0.0","eslint":"^8.57.1","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.31.0","eslint-plugin-jsx-a11y":"^6.3.1","eslint-plugin-no-only-tests":"^3.3.0","eslint-plugin-react":"^7.20.3","eslint-plugin-react-hooks":"^4.0.0","expose-loader":"^3.1.0","flat":"^5.0.2","get-port":"^5.1.1","gulp":"^5.0.0","gulp-typescript":"^5.0.0","mocha":"^11.1.0","mocha-junit-reporter":"^2.0.2","mocha-multi-reporters":"^1.1.7","node-has-native-dependencies":"^1.0.2","node-loader":"^1.0.2","node-polyfill-webpack-plugin":"^1.1.4","nyc":"^15.0.0","prettier":"^2.0.2","rewiremock":"^3.13.0","shortid":"^2.2.8","sinon":"^18.0.0","source-map-support":"^0.5.12","ts-loader":"^9.2.8","ts-mockito":"^2.5.0","ts-node":"^10.7.0","tsconfig-paths-webpack-plugin":"^3.2.0","typemoq":"^2.1.0","typescript":"~5.2","uuid":"^8.3.2","webpack":"^5.76.0","webpack-bundle-analyzer":"^4.5.0","webpack-cli":"^4.9.2","webpack-fix-default-import-plugin":"^1.0.3","webpack-merge":"^5.8.0","webpack-node-externals":"^3.0.0","webpack-require-from":"^1.8.6","worker-loader":"^3.0.8","yargs":"^15.3.1"},"extensionPack":["ms-python.vscode-pylance","ms-python.debugpy","ms-python.vscode-python-envs"]},"location":{"$mid":1,"path":"/home/shiri/.vscode-oss/extensions/ms-python.python-2025.16.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"ms-python","metadata":{"installedTimestamp":1760861701173,"pinned":false,"source":"gallery","id":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"ms-python","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":24129521},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-python.debugpy","uuid":"4bd5d2c9-9d65-401a-b0b2-7498d9f17615"},"manifest":{"name":"debugpy","displayName":"Python Debugger","description":"Python Debugger extension using debugpy.","version":"2025.14.1","publisher":"ms-python","enabledApiProposals":["portsAttributes","debugVisualization","contribViewsWelcome"],"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python-debugger","repository":{"type":"git","url":"https://github.com/microsoft/vscode-python-debugger.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-python-debugger/issues"},"icon":"icon.png","keywords":["python","debugger","debugpy"],"engines":{"vscode":"^1.92.0"},"categories":["Debuggers"],"activationEvents":["onDebugInitialConfigurations","onDebugDynamicConfigurations:debugpy","onDebugResolve:debugpy","onLanguage:python"],"main":"./dist/extension.js","l10n":"./l10n","contributes":{"commands":[{"category":"Python Debugger","command":"debugpy.debugInTerminal","icon":"$(debug-alt)","title":"Python Debugger: Debug Python File"},{"category":"Python Debugger","command":"debugpy.debugUsingLaunchConfig","icon":"$(debug-alt)","title":"Python Debugger: Debug using launch.json"},{"category":"Python Debugger","command":"debugpy.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python Debugger","command":"debugpy.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"},{"category":"Python Debugger","command":"debugpy.reportIssue","title":"Report Issue..."}],"menus":{"issue/reporter":[{"command":"debugpy.reportIssue"}],"commandPalette":[{"category":"Python Debugger","command":"debugpy.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python Debugger","command":"debugpy.debugInTerminal","icon":"$(debug-alt)","title":"Python Debugger: Debug Python File","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python Debugger","command":"debugpy.debugUsingLaunchConfig","icon":"$(debug-alt)","title":"Python Debugger: Debug using launch.json","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python Debugger","command":"debugpy.viewOutput","title":"Show Output"},{"category":"Python Debugger","command":"debugpy.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/title/run":[{"command":"debugpy.debugInTerminal","title":"Python Debugger: Debug Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"debugpy.debugUsingLaunchConfig","title":"Python Debugger: Debug using launch.json","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}]},"configuration":{"properties":{"debugpy.debugJustMyCode":{"default":true,"description":"When debugging only step through user-written code. Disable this to allow stepping into library code.","scope":"resource","type":"boolean"},"debugpy.showPythonInlineValues":{"default":false,"description":"Whether to display inline values in the editor while debugging.","scope":"resource","type":"boolean","tags":["experimental"]}},"title":"Python Debugger","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":["number","string"]}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":["number","string"]}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file. This file can be found in the debugpy extension install folder.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"consoleName":{"default":"Python Debug Console","description":"Display name of the debug console or terminal","type":"string"},"clientOS":{"default":null,"description":"OS that VS code is using.","enum":["windows",null,"unix"]}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program. For string type arguments, it will pass through the shell as is, and therefore all shell variable expansions will apply. But for the array type, the values will be shell-escaped.","items":{"type":"string"},"anyOf":[{"default":"${command:pickArgs}","enum":["${command:pickArgs}"]},{"type":["array","string"]}]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the Python debug adapter executable.","type":"string"},"autoStartBrowser":{"default":false,"description":"Open external browser to launch the application","type":"boolean"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file. This file can be found in the debugpy extension install folder.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications.","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging.","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"},"guiEventLoop":{"default":"matplotlib","description":"The GUI event loop that's going to run. Possible values: \"matplotlib\", \"wx\", \"qt\", \"none\", or a custom function that'll be imported and run.","type":"string"},"consoleName":{"default":"Python Debug Console","description":"Display name of the debug console or terminal","type":"string"},"clientOS":{"default":null,"description":"OS that VS code is using.","enum":["windows",null,"unix"]}}}},"configurationSnippets":[],"label":"Python Debugger","languages":["python"],"type":"debugpy","variables":{"pickProcess":"debugpy.pickLocalProcess","pickArgs":"debugpy.pickArgs"},"when":"!virtualWorkspace && shellExecutionSupported"}],"debugVisualizers":[{"id":"inlineHexDecoder","when":"debugConfigurationType == 'debugpy' && (variableType == 'float' || variableType == 'int')"}],"viewsWelcome":[{"view":"debug","contents":"\n[Show automatic Python configurations](command:workbench.action.debug.selectandstart?%5B%22debugpy%22%5D)\n","when":"dynamicPythonConfigAvailable && !virtualWorkspace"}]},"extensionDependencies":["ms-python.python"],"scripts":{"vscode:prepublish":"npm run package","compile":"webpack","watch":"webpack --watch","package":"webpack --mode production --devtool hidden-source-map","compile-tests":"tsc -p . --outDir out","watch-tests":"tsc -p . -w --outDir out","pretest":"npm run compile-tests && npm run compile && npm run lint","lint":"eslint src --ext ts","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'","test":"node ./out/test/runTest.js","vsce-package":"npx @vscode/vsce package -o python-debugger.vsix"},"devDependencies":{"@types/chai":"^4.1.2","@types/chai-as-promised":"^7.1.0","@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/lodash":"^4.14.104","@types/mocha":"^9.1.0","@types/node":"^22.5.0","@types/semver":"^5.5.0","@types/sinon":"^10.0.13","@types/vscode":"^1.87.0","@typescript-eslint/eslint-plugin":"^5.62.0","@typescript-eslint/parser":"^5.62.0","@vscode/test-electron":"^2.3.9","@vscode/vsce":"^2.24.0","chai":"^4.3.7","chai-as-promised":"^7.1.1","eslint":"^8.50.0","glob":"^8.0.3","mocha":"^10.7.0","prettier":"^3.0.3","semver":"^7.5.4","sinon":"^15.0.2","ts-loader":"^9.3.1","ts-mockito":"^2.6.1","typemoq":"^2.1.0","typescript":"^5.5.4","webpack":"^5.76.0","webpack-cli":"^4.9.2"},"dependencies":{"@vscode/debugadapter":"^1.65.0","@vscode/debugprotocol":"^1.65.0","@vscode/extension-telemetry":"^0.8.4","@vscode/python-extension":"^1.0.6","fs-extra":"^11.2.0","iconv-lite":"^0.6.3","jsonc-parser":"^3.0.0","lodash":"^4.17.21","vscode-languageclient":"^8.0.2"}},"location":{"$mid":1,"path":"/home/shiri/.vscode-oss/extensions/ms-python.debugpy-2025.14.1-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"ms-python","metadata":{"installedTimestamp":1760861701176,"pinned":false,"source":"gallery","id":"4bd5d2c9-9d65-401a-b0b2-7498d9f17615","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"ms-python","targetPlatform":"linux-x64","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":34120880},"isValid":true,"validations":[],"preRelease":false}]}